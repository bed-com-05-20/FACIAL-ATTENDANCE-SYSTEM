var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.765,1,1.918]],["body/modules/AppModule.html",[0,1.249,1,3.673,2,1.225,3,1.225,4,1.501,5,1.501,6,1.225,7,2.328,8,2.046,9,2.483,10,2.483,11,2.7,12,0.039,13,2.7,14,3.079,15,2.7,16,2.046,17,1.501,18,1.354,19,0.426,20,0.372,21,0.507,22,3.008,23,2.913,24,0.818,25,0.608,26,3.008,27,2.137,28,1.879,29,2.137,30,1.354,31,3.008,32,2.483,33,3.008,34,3.008,35,3.008,36,3.008,37,3.008,38,3.008,39,3.008,40,1.354,41,3.008,42,1.225,43,3.008,44,3.008,45,1.67,46,3.008,47,1.501,48,2.137,49,2.483,50,3.008,51,3.008,52,2.483,53,3.008,54,0.608,55,3.008,56,3.008,57,3.008,58,3.008,59,3.008,60,3.008,61,3.008,62,3.008,63,3.008,64,3.008,65,3.008,66,3.008,67,1.879,68,3.008,69,4.1,70,1.225,71,3.008,72,3.008,73,2.913,74,1.879,75,3.008,76,3.008,77,3.008,78,3.008,79,1.514,80,3.008,81,3.008,82,3.008,83,4.1,84,0.426,85,0.225,86,0.025,87,0.025]],["title/controllers/AttendanceController.html",[88,1.134,89,1.918]],["body/controllers/AttendanceController.html",[12,0.038,19,0.314,20,0.274,21,0.274,24,0.661,25,0.449,54,0.797,79,0.82,84,0.314,85,0.166,86,0.02,87,0.02,88,0.82,89,2.063,90,1.833,91,1.387,92,3.153,93,0.357,94,1.345,95,2.264,96,2.726,97,4.366,98,3.055,99,3.302,100,1.833,101,1.086,102,1.612,103,2.221,104,2.915,105,4.159,106,2.893,107,2.221,108,3.475,109,2.552,110,2.063,111,3.942,112,4.366,113,2.428,114,1.203,115,2.221,116,1.87,117,1.774,118,1.723,119,1.774,120,1.22,121,1.612,122,2.428,123,2.221,124,2.221,125,2.063,126,4.666,127,2.221,128,2.221,129,2.727,130,2.221,131,3.302,132,2.463,133,2.221,134,1.836,135,3.302,136,2.221,137,2.727,138,3.302,139,2.221,140,3.604,141,4.666,142,2.726,143,3.302,144,3.302,145,3.302,146,2.726,147,2.221,148,1.648,149,1.387,150,1.833,151,1.578,152,1.606,153,1.833,154,2.221,155,2.221,156,1.387,157,2.915,158,3.25,159,0.904,160,2.221,161,2.221,162,1.833,163,0.904,164,2.727,165,2.527,166,2.801,167,2.221,168,1.965,169,2.221,170,1.578,171,2.221,172,2.221,173,0.904,174,3.302,175,0.999,176,2.221,177,1.387,178,2.221,179,2.221,180,2.221,181,2.221]],["title/modules/AttendanceModule.html",[0,0.765,11,1.532]],["body/modules/AttendanceModule.html",[0,1.309,2,1.564,3,1.564,4,1.916,5,1.916,6,1.564,7,2.621,8,2.4,11,2.929,12,0.038,16,2.4,17,1.916,18,1.728,19,0.544,20,0.475,21,0.475,23,2.728,24,0.803,25,0.776,29,2.728,30,1.728,40,1.728,79,1.776,84,0.544,85,0.287,86,0.03,87,0.03,89,3.281,152,2.471,153,3.169,182,3.169,183,3.169,184,3.169,185,3.839,186,3.169,187,3.839,188,3.839,189,3.839]],["title/injectables/AttendanceService.html",[152,1.251,190,1.251]],["body/injectables/AttendanceService.html",[12,0.039,19,0.348,20,0.304,21,0.304,24,0.649,25,0.497,30,1.107,40,1.883,54,0.926,84,0.348,85,0.184,86,0.022,87,0.022,92,1.979,93,0.395,94,1.45,95,2.257,96,2.938,100,2.03,101,1.547,105,3.938,106,1.979,113,1.368,114,1.34,116,1.315,117,2.063,118,1.873,119,2.063,120,1.978,121,1.693,122,2.549,132,1.536,140,2.938,152,1.45,163,1.002,165,1.227,168,2.063,173,2.182,175,1.602,177,1.536,186,2.03,190,1.45,191,1.536,192,2.03,193,4.183,194,3.559,195,3.559,196,2.223,197,2.46,198,2.864,199,2.46,200,3.559,201,2.46,202,2.46,203,3.559,204,2.46,205,3.559,206,2.938,207,3.559,208,2.529,209,3.559,210,2.529,211,3.559,212,3.453,213,3.559,214,2.46,215,3.559,216,3.257,217,4.183,218,4.865,219,3.559,220,2.03,221,1.747,222,1.227,223,2.46,224,1.227,225,3.559,226,2.46,227,2.46,228,2.46,229,1.747,230,2.19,231,2.46,232,3.559,233,2.938,234,2.46,235,2.46,236,1.368,237,2.03,238,4.183,239,2.46,240,2.03,241,1.979,242,2.46,243,2.46,244,2.46,245,1.747,246,2.03,247,2.46,248,2.46,249,4.183,250,2.46,251,2.46]],["title/controllers/CameraController.html",[88,1.134,252,1.532]],["body/controllers/CameraController.html",[12,0.038,19,0.356,20,0.311,21,0.311,24,0.695,25,0.508,28,1.569,54,0.855,70,1.886,79,0.928,84,0.356,85,0.188,86,0.022,87,0.022,88,0.928,91,1.569,93,0.403,94,1.472,95,2.081,101,1.166,102,1.335,108,2.568,109,2.424,114,0.996,116,1.563,117,1.627,118,1.71,119,1.627,121,1.886,122,1.397,149,2.644,156,1.569,157,2.644,158,2.644,159,1.023,162,2.073,163,1.023,164,2.257,165,1.803,173,1.472,175,1.131,236,2.01,252,1.803,253,2.073,254,3.289,255,3.478,256,3.614,257,2.512,258,4.905,259,3.821,260,2.512,261,3.821,262,3.168,263,4.629,264,3.821,265,2.512,266,3.629,267,3.821,268,3.614,269,4.629,270,2.983,271,2.512,272,2.512,273,2.568,274,2.568,275,2.568,276,2.512,277,3.614,278,3.614,279,2.512,280,2.073,281,3.614,282,3.614,283,2.512,284,4.446,285,3.614,286,4.049,287,2.983,288,2.512,289,3.614,290,2.983,291,3.614,292,3.614,293,2.568,294,2.073,295,1.569,296,1.905,297,2.073,298,2.01,299,4.233,300,2.073,301,2.073,302,2.512,303,2.512,304,2.512,305,2.512,306,2.512,307,2.073,308,2.512,309,2.512,310,2.512,311,2.512,312,2.512,313,2.073,314,2.512]],["title/controllers/CameraController-1.html",[88,0.953,245,1.834,252,1.288]],["body/controllers/CameraController-1.html",[12,0.038,19,0.409,20,0.357,21,0.357,24,0.646,25,0.583,79,1.066,84,0.409,85,0.216,86,0.025,87,0.025,88,1.066,91,1.802,93,0.463,94,1.623,95,1.859,102,1.066,109,2.216,114,0.795,121,1.066,122,1.604,142,3.289,146,3.289,148,2.666,149,1.802,156,1.802,157,2.489,158,2.851,159,1.175,164,1.802,165,1.988,168,1.299,173,1.175,177,1.802,236,2.216,252,1.988,254,4.114,255,2.851,270,3.289,273,2.831,275,2.831,280,2.382,290,3.289,300,2.382,301,2.382,313,2.382,315,2.382,316,4.923,317,2.885,318,3.243,319,4.565,320,2.885,321,3.985,322,2.489,323,2.216,324,2.885,325,5.58,326,5.342,327,4.923,328,3.985,329,3.985,330,4.565,331,3.985,332,3.985,333,3.985,334,3.985,335,3.289,336,3.985,337,2.885,338,2.382,339,5.166,340,2.885,341,2.885,342,3.985,343,2.885,344,2.885,345,2.885,346,2.885,347,2.885,348,2.885,349,2.885,350,2.885,351,2.885,352,2.885,353,4.565,354,2.885,355,2.885]],["title/modules/CameraModule.html",[0,0.765,13,1.532]],["body/modules/CameraModule.html",[0,1.327,2,1.612,3,1.612,4,1.974,5,1.974,6,1.612,7,2.657,8,2.446,12,0.038,13,2.949,16,2.446,17,1.974,18,1.781,19,0.56,20,0.489,21,0.489,24,0.754,25,0.8,79,1.81,84,0.56,85,0.296,86,0.03,87,0.03,252,2.657,296,2.742,297,3.266,356,3.266,357,3.266,358,3.266,359,3.957,360,3.957,361,3.957]],["title/injectables/CameraService.html",[190,1.251,296,1.382]],["body/injectables/CameraService.html",[12,0.038,19,0.358,20,0.313,21,0.313,24,0.658,25,0.511,54,0.859,70,1.03,84,0.358,85,0.189,86,0.022,87,0.022,93,0.406,94,1.48,95,2.086,101,1.28,114,1.28,116,1.57,117,1.635,118,1.342,119,1.635,121,1.342,163,2.086,166,1.797,168,1.139,173,2.086,175,1.913,190,1.48,191,1.58,212,2.998,224,2.555,229,2.581,230,2.214,236,2.363,255,3.484,259,2.088,261,2.998,262,2.847,264,2.998,266,2.581,274,2.581,284,3.508,286,2.998,287,2.088,294,2.088,296,1.635,298,2.02,318,1.797,322,2.655,323,2.02,338,2.088,362,2.088,363,1.104,364,2.583,365,4.25,366,3.632,367,3.632,368,3.632,369,2.53,370,4.25,371,3.3,372,3.632,373,2.53,374,2.998,375,2.269,376,2.269,377,3.632,378,2.53,379,3.632,380,2.53,381,2.269,382,2.998,383,2.53,384,3.632,385,2.53,386,2.088,387,2.53,388,2.53,389,4.25,390,2.53,391,2.269,392,2.53,393,2.53,394,2.088,395,3.632,396,2.53,397,2.53,398,2.53,399,2.53,400,2.53,401,2.53,402,2.53,403,2.53,404,2.53,405,3.632,406,2.53,407,2.53,408,2.53,409,2.53,410,1.58,411,2.269,412,2.998,413,2.269,414,2.53,415,3.632,416,2.53,417,2.53,418,2.53,419,3.632,420,2.53,421,2.53,422,2.53,423,2.53]],["title/interfaces/FaceDescriptorData.html",[424,1.708,425,1.918]],["body/interfaces/FaceDescriptorData.html",[0,0.388,12,0.039,19,0.22,20,0.192,21,0.192,24,0.694,25,0.315,30,0.701,42,0.634,45,1.282,47,2.383,54,0.729,67,1.966,70,1.612,73,1.782,84,0.446,85,0.116,86,0.022,87,0.015,92,2.473,93,0.25,95,1.997,98,0.972,101,1.351,104,0.972,106,0.866,110,0.972,113,0.866,116,1.333,120,1.988,121,0.575,125,0.972,132,0.972,134,0.866,148,1.251,152,1.282,163,1.47,168,1.903,170,1.782,173,2.169,175,2.397,190,1.021,196,0.972,198,1.966,208,1.106,210,1.106,216,1.106,221,1.106,222,0.777,224,2.11,230,2.001,241,1.394,262,1.751,293,1.106,295,0.972,298,1.394,323,0.866,363,0.762,364,1.394,371,3.483,381,1.566,391,0.972,410,0.972,411,0.972,413,0.972,424,1.394,425,2.254,426,1.557,427,0.777,428,0.972,429,3.24,430,2.979,431,2.599,432,2.07,433,2.237,434,2.254,435,0.972,436,1.285,437,1.106,438,1.285,439,1.285,440,1.285,441,1.106,442,1.285,443,1.285,444,1.285,445,1.285,446,1.285,447,1.285,448,1.106,449,2.07,450,1.106,451,1.394,452,4.046,453,4.214,454,2.599,455,2.599,456,0.701,457,1.106,458,1.285,459,3.266,460,1.285,461,3.56,462,3.491,463,1.285,464,1.285,465,1.285,466,1.106,467,1.285,468,1.285,469,1.106,470,1.106,471,1.285,472,1.285,473,2.979,474,1.285,475,2.07,476,2.07,477,1.285,478,1.285,479,1.285,480,1.285,481,2.07,482,1.285,483,1.285,484,1.285,485,1.285,486,1.285,487,1.285,488,1.285,489,1.106,490,1.106,491,1.285,492,1.285,493,1.285,494,1.106,495,1.285,496,1.285,497,1.285,498,1.285,499,1.285,500,2.07,501,1.285,502,1.285,503,1.285,504,1.782,505,1.106,506,1.285,507,1.106,508,1.285,509,1.106,510,1.285,511,1.285,512,1.285,513,1.285,514,1.285,515,1.106,516,1.285,517,1.285,518,1.285,519,1.285,520,0.701,521,1.285,522,1.285,523,1.285,524,1.285,525,2.07,526,1.285,527,1.285,528,1.285,529,1.285,530,2.599,531,2.599,532,1.285,533,2.07,534,2.07,535,1.285,536,1.285,537,1.106,538,1.782,539,1.285,540,2.07,541,1.285,542,1.285,543,1.285,544,1.285,545,1.285,546,2.237,547,2.07,548,1.285,549,1.285,550,1.285,551,1.285,552,2.07,553,1.285,554,1.285,555,1.285,556,1.285,557,1.285,558,1.285,559,2.979,560,2.599,561,1.285,562,1.285,563,1.285,564,1.285,565,1.285,566,1.782,567,1.285,568,1.285,569,1.285,570,1.285,571,1.285,572,1.106,573,1.285,574,1.285,575,1.106,576,1.285,577,1.285,578,1.285,579,1.285,580,0.972,581,2.07]],["title/entities/FaceEntity.html",[42,1.251,520,1.382]],["body/entities/FaceEntity.html",[12,0.038,19,0.499,20,0.436,21,0.436,24,0.715,40,2.401,42,1.855,54,1.116,70,1.855,74,2.201,84,0.499,85,0.263,86,0.028,87,0.028,93,0.566,101,1.522,102,1.971,105,3.925,114,1.47,116,1.682,120,1.864,159,1.435,222,1.758,363,1.385,429,3.333,448,2.504,520,1.586,582,2.909,583,3.153,584,2.909,585,4.555,586,3.524,587,3.524,588,3.524,589,3.524,590,3.524,591,2.909,592,4.555,593,3.524,594,3.524,595,3.586,596,3.524,597,2.909,598,4.166,599,3.76,600,3.524,601,3.524,602,3.524,603,2.909]],["title/classes/FaceGateway.html",[45,1.251,85,0.229]],["body/classes/FaceGateway.html",[12,0.038,19,0.367,20,0.32,21,0.32,24,0.61,25,0.523,45,1.505,54,0.949,84,0.367,85,0.194,86,0.023,87,0.023,93,0.416,94,1.505,101,1.186,102,0.957,109,1.938,114,1.368,117,1.938,118,1.833,119,1.938,121,1.59,148,1.843,151,3.336,163,1.754,224,2.149,230,1.663,275,2.625,322,3.543,335,3.875,363,1.123,364,2.76,375,1.618,376,1.618,457,2.625,469,1.84,604,1.618,605,2.138,606,4.306,607,4.306,608,3.694,609,3.694,610,3.694,611,3.694,612,2.59,613,4.306,614,2.59,615,3.694,616,4.964,617,2.59,618,4.695,619,3.694,620,5.526,621,4.964,622,5.311,623,3.694,624,4.306,625,3.694,626,2.59,627,4.695,628,4.695,629,4.695,630,5.729,631,3.694,632,3.694,633,2.59,634,3.694,635,4.306,636,3.694,637,2.138,638,3.049,639,2.59,640,2.59,641,4.306,642,2.59,643,2.59,644,2.59,645,2.59,646,2.59,647,2.59,648,2.59,649,2.59,650,2.59,651,3.694,652,3.694,653,2.59,654,2.59,655,2.59]],["title/controllers/FaceRecognitionController.html",[88,1.134,656,1.918]],["body/controllers/FaceRecognitionController.html",[12,0.039,19,0.2,20,0.175,21,0.625,24,0.632,25,0.286,27,1.006,28,0.884,47,2.658,52,1.916,54,0.901,67,0.884,70,0.945,79,0.523,84,0.2,85,0.106,86,0.014,87,0.014,88,0.523,91,0.884,92,0.787,93,0.227,94,0.945,95,2.121,98,1.449,101,1.341,102,1.391,104,2.527,106,0.787,108,2.424,109,2.191,110,2.527,113,0.787,114,1.038,116,0.857,117,1.327,118,1.089,119,1.695,120,1.647,121,1.391,122,2.094,125,1.449,134,1.29,148,1.472,149,0.884,150,1.168,151,1.006,156,0.884,157,2.352,158,2.352,159,0.576,163,1.201,164,2.131,165,1.702,166,2.096,168,1.695,173,1.881,175,2.078,177,1.842,196,0.884,220,1.168,224,1.472,229,3.169,230,2.191,241,0.787,254,2.424,255,1.449,262,2.48,266,1.649,267,1.916,273,2.424,274,3.169,295,0.884,296,1.327,298,1.29,307,1.916,323,0.787,363,0.706,364,1.29,381,1.449,391,2.131,394,1.916,410,0.884,411,2.131,412,1.168,413,0.884,427,2.019,429,2.527,450,2.096,451,0.787,456,1.044,461,3.65,466,1.649,489,1.649,490,1.006,494,2.096,504,1.649,505,1.006,507,1.649,515,2.096,537,1.649,538,1.006,546,1.649,566,2.424,572,2.424,575,2.424,580,1.449,583,1.449,656,1.449,657,1.168,658,2.321,659,2.949,660,2.321,661,1.415,662,2.321,663,1.415,664,1.415,665,1.415,666,2.321,667,1.415,668,1.415,669,4.046,670,1.415,671,2.321,672,2.321,673,3.412,674,1.415,675,2.321,676,2.321,677,1.415,678,2.321,679,2.321,680,2.321,681,2.321,682,1.415,683,1.415,684,1.415,685,1.415,686,1.415,687,1.415,688,1.415,689,2.321,690,1.415,691,1.415,692,1.415,693,1.415,694,1.168,695,1.415,696,2.949,697,1.415,698,1.415,699,1.415,700,1.415,701,1.415,702,1.415,703,1.168,704,1.168,705,1.415,706,1.415,707,1.415,708,1.415,709,2.321,710,2.321,711,2.321,712,2.949,713,2.321,714,1.415,715,2.321,716,1.415,717,1.415,718,2.321,719,2.321,720,2.321,721,4.46,722,4.046,723,2.321,724,1.415,725,2.321,726,2.321,727,2.321,728,2.321,729,2.321,730,2.321,731,2.321,732,1.415,733,1.415,734,1.415,735,2.949,736,1.415,737,2.321,738,2.321,739,2.321,740,1.415,741,2.321,742,2.321,743,2.321,744,1.415,745,1.415,746,1.415,747,2.321,748,1.415,749,1.415,750,1.415,751,1.415,752,1.415,753,2.321,754,1.415,755,1.415,756,1.415,757,1.415,758,1.415,759,1.415,760,1.415,761,1.415,762,1.415]],["title/modules/FaceRecognitionModule.html",[0,0.765,14,1.708]],["body/modules/FaceRecognitionModule.html",[0,1.249,2,1.414,3,1.414,4,1.733,5,1.733,6,1.414,7,2.501,8,1.733,11,2.812,12,0.038,13,2.812,14,3.342,15,2.812,16,2.251,17,1.733,18,1.563,19,0.492,20,0.429,21,0.429,23,3.205,24,0.824,25,0.702,29,2.467,30,1.563,32,2.866,42,1.414,47,1.733,48,2.467,49,2.866,79,1.666,84,0.492,85,0.259,86,0.028,87,0.028,427,1.733,435,2.169,456,2.537,656,3.13,694,2.866,763,2.866,764,2.866,765,3.472,766,3.472,767,3.472,768,3.472,769,3.472,770,2.866,771,3.472]],["title/injectables/FaceRecognitionService.html",[190,1.251,456,1.382]],["body/injectables/FaceRecognitionService.html",[0,0.321,12,0.039,19,0.182,20,0.159,21,0.159,24,0.651,25,0.26,30,0.579,42,0.524,45,1.668,47,2.224,54,0.954,67,1.723,70,1.456,73,1.524,84,0.391,85,0.096,86,0.02,87,0.013,92,2.278,93,0.207,94,0.874,95,2.314,98,0.804,101,1.38,104,0.804,106,0.716,110,0.804,113,0.716,114,1.356,116,1.188,117,1.738,118,1.426,119,1.738,120,1.849,121,1.743,125,0.804,132,0.804,134,0.716,148,1.376,152,1.668,163,1.573,168,1.738,170,1.524,173,2.07,175,2.287,190,0.874,191,0.804,196,1.34,198,2.233,208,0.914,210,0.914,216,0.914,221,0.914,222,0.642,224,2.409,230,1.931,241,1.193,262,1.534,293,0.914,295,0.804,298,1.193,323,0.716,363,0.652,364,1.789,371,3.812,375,1.34,376,1.34,381,1.34,391,0.804,410,0.804,411,0.804,413,0.804,424,1.193,425,2.412,427,2.498,428,0.804,429,2.872,430,1.771,431,3.188,432,1.771,433,1.96,434,2.01,435,0.804,436,1.062,437,0.914,438,1.062,439,1.062,440,1.062,441,0.914,442,1.062,443,1.062,444,1.062,445,1.062,446,1.062,447,1.062,448,0.914,449,1.771,450,0.914,451,1.193,452,3.795,453,3.985,454,2.277,455,2.277,456,0.965,457,0.914,458,1.771,459,2.952,460,1.062,461,3.498,462,3.188,463,1.062,464,1.771,465,1.062,466,0.914,467,1.062,468,1.062,469,0.914,470,0.914,471,1.062,472,1.062,473,2.656,474,1.062,475,1.771,476,1.771,477,1.062,478,1.062,479,1.062,480,2.656,481,1.771,482,1.062,483,1.062,484,1.062,485,1.062,486,1.062,487,1.062,488,1.062,489,0.914,490,0.914,491,1.771,492,1.062,493,1.062,494,0.914,495,1.062,496,1.062,497,1.062,498,1.062,499,1.062,500,1.771,501,1.062,502,1.062,503,1.062,504,1.524,505,0.914,506,1.062,507,0.914,508,1.062,509,0.914,510,1.062,511,1.062,512,1.062,513,1.062,514,1.062,515,0.914,516,1.062,517,1.062,518,1.062,519,1.771,520,0.579,521,1.062,522,1.062,523,1.062,524,1.062,525,1.771,526,1.062,527,1.062,528,1.062,529,2.656,530,2.277,531,2.277,532,1.062,533,1.771,534,1.771,535,1.062,536,1.062,537,0.914,538,1.524,539,1.771,540,1.771,541,1.062,542,1.062,543,1.771,544,1.062,545,1.062,546,1.96,547,1.771,548,1.062,549,1.062,550,1.062,551,1.062,552,1.771,553,1.062,554,1.062,555,1.062,556,1.062,557,1.062,558,1.062,559,2.656,560,2.277,561,1.062,562,1.062,563,1.062,564,1.062,565,1.062,566,1.524,567,1.062,568,1.771,569,1.062,570,1.062,571,1.062,572,2.286,573,1.062,574,1.062,575,2.286,576,1.062,577,1.062,578,1.771,579,1.062,580,0.804,581,1.771,583,0.804,772,2.145,773,2.145,774,2.145,775,2.145,776,2.145,777,1.287,778,2.145,779,1.287,780,1.287,781,1.287,782,1.287,783,1.287,784,1.287,785,1.287,786,1.287,787,1.287,788,1.771,789,1.287,790,1.287,791,1.287]],["title/modules/GatewayModule.html",[0,0.765,15,1.532]],["body/modules/GatewayModule.html",[0,1.349,2,1.673,3,1.673,4,2.049,5,2.049,6,1.673,7,2.502,8,2.701,12,0.038,15,2.885,16,2.502,17,2.049,18,1.848,19,0.581,20,0.508,21,0.508,24,0.71,25,0.83,45,2.449,48,2.917,84,0.581,85,0.307,86,0.031,87,0.031,437,2.917,770,3.389,792,3.389,793,3.389,794,4.106,795,4.106]],["title/classes/MarkAttendanceDto.html",[85,0.229,129,1.918]],["body/classes/MarkAttendanceDto.html",[12,0.037,19,0.619,20,0.54,21,0.54,24,0.619,54,0.883,84,0.619,85,0.327,86,0.032,87,0.032,93,0.702,101,1.435,102,1.615,114,1.205,120,2.054,129,3.253,159,1.781,363,1.583,595,3.952,604,2.731,796,3.609,797,4.372]],["title/classes/MockEnrollDto.html",[85,0.229,137,1.918]],["body/classes/MockEnrollDto.html",[12,0.038,19,0.59,20,0.515,21,0.515,24,0.59,54,1.022,84,0.59,85,0.311,86,0.031,87,0.031,93,0.669,101,1.561,102,1.868,114,1.394,118,2.012,120,2.012,137,3.16,159,1.697,363,1.538,595,4.125,604,2.602,798,3.439,799,4.166,800,4.166,801,4.166,802,4.166]],["title/entities/Students.html",[40,1.382,520,1.382]],["body/entities/Students.html",[12,0.038,19,0.469,20,0.409,21,0.409,24,0.619,40,1.968,42,2.373,54,1.146,70,2.206,74,2.067,84,0.469,85,0.247,86,0.027,87,0.027,93,0.532,101,1.533,102,2.054,114,1.533,116,1.222,118,1.808,120,1.808,165,2.443,222,1.652,233,3.609,363,1.329,435,2.067,509,3.106,520,1.49,583,2.731,584,2.732,591,2.732,597,3.609,598,4.753,599,3.609,603,2.732,803,2.732,804,4.896,805,4.372,806,5.208,807,3.31,808,3.31,809,3.31,810,3.31,811,3.31,812,3.31,813,3.31,814,3.31,815,3.31,816,3.31,817,4.372,818,3.31,819,3.31]],["title/coverage.html",[820,2.955]],["body/coverage.html",[6,1.439,12,0.038,21,0.437,40,1.59,42,1.439,45,1.439,54,0.922,85,0.378,86,0.028,87,0.028,88,1.972,89,2.207,90,2.916,129,2.207,137,2.207,152,1.439,190,2.058,192,2.916,230,1.59,240,3.766,241,3.281,252,2.277,253,2.916,296,1.59,315,2.916,362,2.916,424,1.964,425,2.207,427,2.665,428,3.156,451,1.964,456,1.59,520,2.053,582,2.916,605,2.916,656,2.207,657,2.916,796,2.916,798,2.916,803,2.916,820,2.51,821,2.916,822,3.533,823,3.533,824,5.529,825,3.533,826,3.533,827,3.533,828,3.533,829,3.533,830,3.533,831,4.562,832,3.533,833,3.533,834,3.533,835,3.533,836,3.241,837,3.533,838,3.533,839,3.533,840,3.533,841,3.533,842,3.533,843,3.533,844,3.533,845,3.533]],["title/dependencies.html",[3,1.501,846,2.13]],["body/dependencies.html",[3,1.564,12,0.039,25,0.776,27,3.418,28,3.005,30,1.728,47,1.916,86,0.03,87,0.03,159,1.564,222,1.916,382,3.169,433,2.728,434,2.398,580,2.398,637,3.169,638,3.971,703,3.169,704,3.169,847,5.253,848,3.839,849,3.839,850,3.839,851,4.81,852,3.839,853,3.839,854,3.839,855,3.839,856,3.839,857,3.839,858,3.839,859,3.839,860,3.839,861,3.839,862,3.839,863,3.839,864,3.839,865,3.839,866,3.839,867,3.839,868,3.839,869,3.839,870,3.839,871,3.839,872,3.839,873,3.839,874,3.839,875,3.839,876,3.839,877,3.839,878,3.839]],["title/miscellaneous/functions.html",[879,1.288,880,3.041]],["body/miscellaneous/functions.html",[6,2.339,12,0.034,86,0.034,87,0.034,93,0.758,836,3.355,879,2.356,880,3.898,881,3.898]],["title/index.html",[93,0.414,318,1.834,882,2.581]],["body/index.html",[12,0.037,18,2.344,20,0.329,86,0.023,87,0.023,109,1.199,134,1.481,198,1.663,206,2.198,236,1.481,237,3.609,246,4.299,322,1.663,374,2.198,386,2.198,441,1.892,470,1.892,820,1.892,821,3.11,883,2.663,884,4.372,885,3.768,886,2.663,887,2.663,888,2.663,889,3.768,890,4.372,891,2.663,892,2.663,893,4.754,894,2.663,895,4.754,896,5.469,897,2.663,898,5.354,899,2.663,900,2.663,901,3.768,902,2.663,903,3.768,904,2.663,905,4.372,906,2.663,907,3.768,908,2.663,909,2.663,910,2.663,911,2.663,912,2.663,913,4.754,914,5.469,915,5.208,916,2.663,917,3.768,918,2.663,919,2.663,920,2.663,921,2.663,922,3.768,923,4.754,924,2.663,925,3.768,926,2.663,927,3.768,928,5.208,929,4.754,930,2.663,931,3.768,932,2.663,933,2.663,934,2.663,935,2.663,936,4.754,937,2.663,938,2.663,939,2.663,940,2.663,941,3.768,942,2.663,943,2.663,944,2.663,945,2.663,946,2.663,947,3.768,948,2.663,949,2.663,950,2.663,951,3.768,952,2.663,953,2.663,954,3.924,955,3.768,956,2.663,957,2.663,958,2.663,959,2.663,960,2.663,961,2.663,962,2.663,963,3.768,964,2.663,965,2.663,966,2.663,967,2.663,968,2.663,969,2.663,970,2.663,971,2.663,972,2.663,973,3.768,974,2.663,975,2.663,976,2.663,977,2.663,978,2.663,979,3.768,980,2.663,981,2.663,982,2.663,983,3.768,984,3.768,985,2.663,986,2.663,987,2.663,988,2.663,989,2.663,990,2.663,991,2.663,992,2.663,993,2.663,994,2.663,995,2.198,996,2.663,997,2.663,998,2.663,999,2.663,1000,2.663,1001,2.663,1002,2.198]],["title/modules.html",[2,1.694]],["body/modules.html",[1,2.782,2,1.814,11,2.223,12,0.032,13,2.223,14,2.477,15,2.223,86,0.032,87,0.032,954,4.88,1003,5.912,1004,5.912,1005,5.912]],["title/overview.html",[1006,3.433]],["body/overview.html",[0,0.878,1,3.715,2,1.435,3,1.435,4,1.758,5,1.758,6,1.435,7,1.758,8,1.758,9,2.909,10,2.909,11,2.873,12,0.038,13,2.873,14,3.33,15,2.757,16,2.273,17,1.758,18,1.586,45,2.173,74,2.201,79,1.301,86,0.028,87,0.028,152,2.346,182,2.909,183,2.909,184,2.909,191,2.201,245,2.504,296,2.592,356,2.909,357,2.909,358,2.909,424,1.96,456,2.272,604,2.201,763,2.909,764,2.909,792,2.909,793,2.909,1006,2.909,1007,3.524,1008,3.524,1009,3.524,1010,4.555]],["title/properties.html",[363,1.12,846,2.13]],["body/properties.html",[12,0.037,86,0.033,87,0.033,109,2.104,363,1.421,995,3.859,1002,3.859,1011,4.675,1012,4.675,1013,4.675]],["title/miscellaneous/typealiases.html",[879,1.288,1014,3.685]],["body/miscellaneous/typealiases.html",[12,0.036,54,1.18,86,0.033,87,0.033,93,0.734,427,2.28,428,3.339,451,2.972,788,4.677,879,2.28,1015,4.57,1016,4.57]],["title/miscellaneous/variables.html",[879,1.288,1017,3.041]],["body/miscellaneous/variables.html",[12,0.035,86,0.033,87,0.033,93,0.756,375,2.94,376,2.94,434,2.94,836,3.344,879,2.348,881,3.885,1017,3.885]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"modules/CameraModule.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"entities/FaceEntity.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"modules/FaceRecognitionModule.html":{},"injectables/FaceRecognitionService.html":{},"modules/GatewayModule.html":{},"classes/MarkAttendanceDto.html":{},"classes/MockEnrollDto.html":{},"entities/Students.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":241,"title":{},"body":{"injectables/AttendanceService.html":{},"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1012,"title":{},"body":{"properties.html":{}}}],["0.12.3",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["0.22.2",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["0.3.21",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["0.6",{"_index":500,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["0/1",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":842,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":245,"title":{"controllers/CameraController-1.html":{}},"body":{"injectables/AttendanceService.html":{},"overview.html":{}}}],["1.4.5",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["1/2",{"_index":839,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":841,"title":{},"body":{"coverage.html":{}}}],["11.0.0",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":878,"title":{},"body":{"dependencies.html":{}}}],["11.1.1",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["11.2.0",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":840,"title":{},"body":{"coverage.html":{}}}],["16.4.7",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1009,"title":{},"body":{"overview.html":{}}}],["2/3",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":829,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":108,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/CameraController.html":{},"controllers/FaceRecognitionController.html":{}}}],["201",{"_index":142,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/CameraController-1.html":{}}}],["3",{"_index":1010,"title":{},"body":{"overview.html":{}}}],["3.1.0",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["3.14.0",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["3/6",{"_index":825,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1008,"title":{},"body":{"overview.html":{}}}],["4.0.2",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["4.22.0",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["4.8.1",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["4/5",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":144,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["404",{"_index":112,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["416",{"_index":498,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["5",{"_index":1007,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":240,"title":{},"body":{"injectables/AttendanceService.html":{},"coverage.html":{}}}],["500",{"_index":273,"title":{},"body":{"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"controllers/FaceRecognitionController.html":{}}}],["5432",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["66",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["7.8.1",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["8.14.1",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":826,"title":{},"body":{"coverage.html":{}}}],["a.distance",{"_index":550,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["a.oregon",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["absent",{"_index":227,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["access",{"_index":646,"title":{},"body":{"classes/FaceGateway.html":{}}}],["activity",{"_index":650,"title":{},"body":{"classes/FaceGateway.html":{}}}],["alias",{"_index":843,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1015,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all.map((entry",{"_index":532,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["all.map((face",{"_index":573,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["allow",{"_index":644,"title":{},"body":{"classes/FaceGateway.html":{}}}],["allowing",{"_index":942,"title":{},"body":{"index.html":{}}}],["already",{"_index":216,"title":{},"body":{"injectables/AttendanceService.html":{},"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["amazing",{"_index":989,"title":{},"body":{"index.html":{}}}],["api",{"_index":487,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["api.js",{"_index":433,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{},"dependencies.html":{}}}],["apibody",{"_index":696,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["apiconsumes",{"_index":695,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["apiconsumes('multipart/form",{"_index":709,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["apioperation",{"_index":157,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"controllers/FaceRecognitionController.html":{}}}],["apiproperty",{"_index":595,"title":{},"body":{"entities/FaceEntity.html":{},"classes/MarkAttendanceDto.html":{},"classes/MockEnrollDto.html":{}}}],["apiproperty()@column({unique",{"_index":589,"title":{},"body":{"entities/FaceEntity.html":{}}}],["apiproperty()@primarygeneratedcolumn('uuid",{"_index":587,"title":{},"body":{"entities/FaceEntity.html":{}}}],["apiquery",{"_index":299,"title":{},"body":{"controllers/CameraController.html":{}}}],["apiresponse",{"_index":158,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"controllers/FaceRecognitionController.html":{}}}],["apitags",{"_index":156,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"controllers/FaceRecognitionController.html":{}}}],["apitags('attendance",{"_index":160,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["apitags('camera",{"_index":300,"title":{},"body":{"controllers/CameraController.html":{},"controllers/CameraController-1.html":{}}}],["apitags('face",{"_index":699,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["appcontroller",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":915,"title":{},"body":{"index.html":{}}}],["applications",{"_index":889,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["assign",{"_index":268,"title":{},"body":{"controllers/CameraController.html":{}}}],["assumes",{"_index":328,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["async",{"_index":95,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["attendance",{"_index":92,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["attendance'})@apiconsumes('multipart/form",{"_index":687,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["attendance.controller",{"_index":187,"title":{},"body":{"modules/AttendanceModule.html":{}}}],["attendance.service",{"_index":153,"title":{},"body":{"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{}}}],["attendance/attendance.module",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["attendance/students.entity",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["attendance_04gg",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["attendancecontroller",{"_index":89,"title":{"controllers/AttendanceController.html":{}},"body":{"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{},"coverage.html":{}}}],["attendanceerror",{"_index":454,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["attendancemodule",{"_index":11,"title":{"modules/AttendanceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/FaceRecognitionModule.html":{},"modules.html":{},"overview.html":{}}}],["attendanceservice",{"_index":152,"title":{"injectables/AttendanceService.html":{}},"body":{"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{},"injectables/AttendanceService.html":{},"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{},"coverage.html":{},"overview.html":{}}}],["author",{"_index":995,"title":{},"body":{"index.html":{},"properties.html":{}}}],["auto",{"_index":291,"title":{},"body":{"controllers/CameraController.html":{}}}],["await",{"_index":175,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["aws",{"_index":931,"title":{},"body":{"index.html":{}}}],["axios",{"_index":382,"title":{},"body":{"injectables/CameraService.html":{},"dependencies.html":{}}}],["axios.get(captureurl",{"_index":399,"title":{},"body":{"injectables/CameraService.html":{}}}],["axios.get(starturl",{"_index":421,"title":{},"body":{"injectables/CameraService.html":{}}}],["b.distance",{"_index":551,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["backers",{"_index":990,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":295,"title":{},"body":{"controllers/CameraController.html":{},"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["badrequestexception('invalid",{"_index":760,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["badrequestexception('no",{"_index":732,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["badrequestexception('registration",{"_index":717,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["base",{"_index":383,"title":{},"body":{"injectables/CameraService.html":{}}}],["based",{"_index":206,"title":{},"body":{"injectables/AttendanceService.html":{},"index.html":{}}}],["binary",{"_index":713,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["board",{"_index":982,"title":{},"body":{"index.html":{}}}],["body",{"_index":150,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/FaceRecognitionController.html":{}}}],["body('registrationnumber",{"_index":716,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/CameraModule.html":{},"modules/FaceRecognitionModule.html":{},"modules/GatewayModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1005,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1003,"title":{},"body":{"modules.html":{}}}],["building",{"_index":885,"title":{},"body":{"index.html":{}}}],["camera",{"_index":254,"title":{},"body":{"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"controllers/FaceRecognitionController.html":{}}}],["camera'})@apiquery({name",{"_index":265,"title":{},"body":{"controllers/CameraController.html":{}}}],["camera.controller",{"_index":360,"title":{},"body":{"modules/CameraModule.html":{}}}],["camera.service",{"_index":297,"title":{},"body":{"controllers/CameraController.html":{},"modules/CameraModule.html":{}}}],["camera/camera.module",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["camera/camera.service",{"_index":693,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["camera/capture",{"_index":277,"title":{},"body":{"controllers/CameraController.html":{}}}],["camera/start",{"_index":289,"title":{},"body":{"controllers/CameraController.html":{}}}],["cameracontroller",{"_index":252,"title":{"controllers/CameraController.html":{},"controllers/CameraController-1.html":{}},"body":{"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"modules/CameraModule.html":{},"coverage.html":{}}}],["cameramodule",{"_index":13,"title":{"modules/CameraModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CameraModule.html":{},"modules/FaceRecognitionModule.html":{},"modules.html":{},"overview.html":{}}}],["cameraservice",{"_index":296,"title":{"injectables/CameraService.html":{}},"body":{"controllers/CameraController.html":{},"modules/CameraModule.html":{},"injectables/CameraService.html":{},"controllers/FaceRecognitionController.html":{},"coverage.html":{},"overview.html":{}}}],["canvas",{"_index":434,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["canvas.canvas",{"_index":443,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["canvas.image",{"_index":444,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["canvas.imagedata",{"_index":446,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["canvas.loadimage(imagepath",{"_index":493,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["capture",{"_index":255,"title":{},"body":{"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"injectables/CameraService.html":{},"controllers/FaceRecognitionController.html":{}}}],["capture(@query('filename",{"_index":305,"title":{},"body":{"controllers/CameraController.html":{}}}],["capture(filename",{"_index":257,"title":{},"body":{"controllers/CameraController.html":{}}}],["capture?duration=${duration",{"_index":417,"title":{},"body":{"injectables/CameraService.html":{}}}],["captured",{"_index":269,"title":{},"body":{"controllers/CameraController.html":{}}}],["captureimage",{"_index":366,"title":{},"body":{"injectables/CameraService.html":{}}}],["captureimage(filename",{"_index":368,"title":{},"body":{"injectables/CameraService.html":{}}}],["captures",{"_index":278,"title":{},"body":{"controllers/CameraController.html":{}}}],["captureurl",{"_index":395,"title":{},"body":{"injectables/CameraService.html":{}}}],["capturing",{"_index":292,"title":{},"body":{"controllers/CameraController.html":{}}}],["catch",{"_index":411,"title":{},"body":{"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["channel",{"_index":957,"title":{},"body":{"index.html":{}}}],["check",{"_index":246,"title":{},"body":{"injectables/AttendanceService.html":{},"index.html":{}}}],["child_process",{"_index":337,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["class",{"_index":85,"title":{"classes/FaceGateway.html":{},"classes/MarkAttendanceDto.html":{},"classes/MockEnrollDto.html":{}},"body":{"modules/AppModule.html":{},"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"modules/CameraModule.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"entities/FaceEntity.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"modules/FaceRecognitionModule.html":{},"injectables/FaceRecognitionService.html":{},"modules/GatewayModule.html":{},"classes/MarkAttendanceDto.html":{},"classes/MockEnrollDto.html":{},"entities/Students.html":{},"coverage.html":{}}}],["classes",{"_index":604,"title":{},"body":{"classes/FaceGateway.html":{},"classes/MarkAttendanceDto.html":{},"classes/MockEnrollDto.html":{},"overview.html":{}}}],["clean",{"_index":513,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["clicks",{"_index":941,"title":{},"body":{"index.html":{}}}],["client",{"_index":630,"title":{},"body":{"classes/FaceGateway.html":{}}}],["client.id",{"_index":652,"title":{},"body":{"classes/FaceGateway.html":{}}}],["clients",{"_index":623,"title":{},"body":{"classes/FaceGateway.html":{}}}],["closest",{"_index":552,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["cloud",{"_index":926,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_attendancemodule",{"_index":182,"title":{},"body":{"modules/AttendanceModule.html":{},"overview.html":{}}}],["cluster_attendancemodule_exports",{"_index":183,"title":{},"body":{"modules/AttendanceModule.html":{},"overview.html":{}}}],["cluster_attendancemodule_providers",{"_index":184,"title":{},"body":{"modules/AttendanceModule.html":{},"overview.html":{}}}],["cluster_cameramodule",{"_index":356,"title":{},"body":{"modules/CameraModule.html":{},"overview.html":{}}}],["cluster_cameramodule_exports",{"_index":357,"title":{},"body":{"modules/CameraModule.html":{},"overview.html":{}}}],["cluster_cameramodule_providers",{"_index":358,"title":{},"body":{"modules/CameraModule.html":{},"overview.html":{}}}],["cluster_facerecognitionmodule",{"_index":763,"title":{},"body":{"modules/FaceRecognitionModule.html":{},"overview.html":{}}}],["cluster_facerecognitionmodule_imports",{"_index":765,"title":{},"body":{"modules/FaceRecognitionModule.html":{}}}],["cluster_facerecognitionmodule_providers",{"_index":764,"title":{},"body":{"modules/FaceRecognitionModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule",{"_index":792,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule_exports",{"_index":793,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["code",{"_index":353,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["column",{"_index":598,"title":{},"body":{"entities/FaceEntity.html":{},"entities/Students.html":{}}}],["column()@primarygeneratedcolumn",{"_index":809,"title":{},"body":{"entities/Students.html":{}}}],["column({type",{"_index":584,"title":{},"body":{"entities/FaceEntity.html":{},"entities/Students.html":{}}}],["column({unique",{"_index":813,"title":{},"body":{"entities/Students.html":{}}}],["come",{"_index":948,"title":{},"body":{"index.html":{}}}],["connected",{"_index":621,"title":{},"body":{"classes/FaceGateway.html":{}}}],["connects",{"_index":631,"title":{},"body":{"classes/FaceGateway.html":{}}}],["console.error(`stderr",{"_index":349,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["console.log(`camera",{"_index":354,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["console.log(`stdout",{"_index":345,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["const",{"_index":173,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["constructor",{"_index":196,"title":{},"body":{"injectables/AttendanceService.html":{},"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["constructor(facerepository",{"_index":777,"title":{},"body":{"injectables/FaceRecognitionService.html":{}}}],["constructor(private",{"_index":162,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/CameraController.html":{}}}],["constructor(studentsrepo",{"_index":197,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["continuous",{"_index":281,"title":{},"body":{"controllers/CameraController.html":{}}}],["controller",{"_index":88,"title":{"controllers/AttendanceController.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"controllers/FaceRecognitionController.html":{}},"body":{"controllers/AttendanceController.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"controllers/FaceRecognitionController.html":{},"coverage.html":{}}}],["controller('attendance",{"_index":161,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["controller('camera",{"_index":301,"title":{},"body":{"controllers/CameraController.html":{},"controllers/CameraController-1.html":{}}}],["controller('face",{"_index":705,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["controller/service",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["controllers",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"modules/CameraModule.html":{},"controllers/FaceRecognitionController.html":{},"modules/FaceRecognitionModule.html":{},"overview.html":{}}}],["correctly",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["cors",{"_index":645,"title":{},"body":{"classes/FaceGateway.html":{}}}],["count",{"_index":508,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["courses",{"_index":962,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":820,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cross",{"_index":640,"title":{},"body":{"classes/FaceGateway.html":{}}}],["currenttime",{"_index":232,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["custom",{"_index":619,"title":{},"body":{"classes/FaceGateway.html":{}}}],["d.descriptor",{"_index":517,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["d.descriptor))).tofixed(4",{"_index":564,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["d0rj9vbipnbc73b9v590",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["data",{"_index":148,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/CameraController-1.html":{},"interfaces/FaceDescriptorData.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["data')@apibody({schema",{"_index":675,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["data.registrationnumber",{"_index":170,"title":{},"body":{"controllers/AttendanceController.html":{},"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["database",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["date",{"_index":233,"title":{},"body":{"injectables/AttendanceService.html":{},"entities/Students.html":{}}}],["date().toisostring",{"_index":510,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["date(examstarttime",{"_index":243,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["date(student.lastmarkedat",{"_index":250,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["date.now",{"_index":727,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["date.now()}.jpg",{"_index":725,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["db",{"_index":462,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/CameraModule.html":{},"modules/FaceRecognitionModule.html":{},"modules/GatewayModule.html":{},"overview.html":{}}}],["decorators",{"_index":102,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"entities/FaceEntity.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"classes/MarkAttendanceDto.html":{},"classes/MockEnrollDto.html":{},"entities/Students.html":{}}}],["deeper",{"_index":959,"title":{},"body":{"index.html":{}}}],["default",{"_index":375,"title":{},"body":{"injectables/CameraService.html":{},"classes/FaceGateway.html":{},"injectables/FaceRecognitionService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":234,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["defined",{"_index":114,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"injectables/CameraService.html":{},"entities/FaceEntity.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{},"classes/MarkAttendanceDto.html":{},"classes/MockEnrollDto.html":{},"entities/Students.html":{}}}],["delete",{"_index":104,"title":{},"body":{"controllers/AttendanceController.html":{},"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["delete(':id",{"_index":666,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["delete(':registrationnumber",{"_index":179,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["delete(':registrationnumber')@apioperation({summary",{"_index":103,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["delete('all",{"_index":751,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["delete('all')@apioperation({summary",{"_index":661,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["deletealldescriptors",{"_index":575,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["deletebyid",{"_index":658,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["deletebyid(@param('id",{"_index":758,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["deletebyid(id",{"_index":665,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["deleted",{"_index":110,"title":{},"body":{"controllers/AttendanceController.html":{},"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["deletedescriptorbyid",{"_index":772,"title":{},"body":{"injectables/FaceRecognitionService.html":{}}}],["deletedescriptorbyid(id",{"_index":578,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["deletes",{"_index":750,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["deletestudent",{"_index":96,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{}}}],["deletestudent(@param('registrationnumber",{"_index":180,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["deletestudent(registrationnumber",{"_index":100,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/CameraModule.html":{},"modules/FaceRecognitionModule.html":{},"modules/GatewayModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":913,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":930,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":922,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":940,"title":{},"body":{"index.html":{}}}],["description",{"_index":109,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"index.html":{},"properties.html":{}}}],["descriptor",{"_index":429,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"entities/FaceEntity.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["descriptor(s",{"_index":734,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["descriptor)'})@apiconsumes('multipart/form",{"_index":674,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["descriptors",{"_index":461,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["descriptors'})@apiresponse({status",{"_index":662,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["descriptors.'})@apiresponse({status",{"_index":683,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["dest",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["detect",{"_index":671,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["detectallfaces(img",{"_index":495,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["detectandregister",{"_index":659,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["detectandregister(file",{"_index":668,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["detected",{"_index":507,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["detectedfaces",{"_index":543,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["detectface",{"_index":773,"title":{},"body":{"injectables/FaceRecognitionService.html":{}}}],["detectface(imagepath",{"_index":491,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["detection",{"_index":740,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["detections",{"_index":494,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["detections.length",{"_index":504,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["detections.map((d",{"_index":516,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["detects",{"_index":489,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["development",{"_index":899,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":968,"title":{},"body":{"index.html":{}}}],["disconnected",{"_index":635,"title":{},"body":{"classes/FaceGateway.html":{}}}],["disconnects",{"_index":634,"title":{},"body":{"classes/FaceGateway.html":{}}}],["discord",{"_index":956,"title":{},"body":{"index.html":{}}}],["distance",{"_index":453,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["dive",{"_index":958,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":821,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dotenv",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["dpg",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["dto",{"_index":135,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["dto/markattendance_dto",{"_index":154,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["dto/mock",{"_index":801,"title":{},"body":{"classes/MockEnrollDto.html":{}}}],["dto/mockenroll_dto",{"_index":155,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["duration",{"_index":284,"title":{},"body":{"controllers/CameraController.html":{},"injectables/CameraService.html":{}}}],["during",{"_index":247,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["e.g",{"_index":270,"title":{},"body":{"controllers/CameraController.html":{},"controllers/CameraController-1.html":{}}}],["e2e",{"_index":908,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":886,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":920,"title":{},"body":{"index.html":{}}}],["elsewhere",{"_index":334,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["emit",{"_index":618,"title":{},"body":{"classes/FaceGateway.html":{}}}],["emitevent",{"_index":608,"title":{},"body":{"classes/FaceGateway.html":{}}}],["emitevent(event",{"_index":615,"title":{},"body":{"classes/FaceGateway.html":{}}}],["emitted",{"_index":655,"title":{},"body":{"classes/FaceGateway.html":{}}}],["emitter",{"_index":468,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["enable",{"_index":639,"title":{},"body":{"classes/FaceGateway.html":{}}}],["endpoint",{"_index":385,"title":{},"body":{"injectables/CameraService.html":{}}}],["enroll",{"_index":141,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["enroll')@apioperation({summary",{"_index":139,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["enroll.dto.ts",{"_index":802,"title":{},"body":{"classes/MockEnrollDto.html":{}}}],["enrolled",{"_index":143,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["enrollment",{"_index":215,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["ensure",{"_index":919,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":972,"title":{},"body":{"index.html":{}}}],["entities",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"entities/FaceEntity.html":{},"entities/Students.html":{},"overview.html":{}}}],["entities/face.entity",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["entity",{"_index":520,"title":{"entities/FaceEntity.html":{},"entities/Students.html":{}},"body":{"interfaces/FaceDescriptorData.html":{},"entities/FaceEntity.html":{},"injectables/FaceRecognitionService.html":{},"entities/Students.html":{},"coverage.html":{}}}],["entity('faceentity",{"_index":600,"title":{},"body":{"entities/FaceEntity.html":{}}}],["entity('students",{"_index":818,"title":{},"body":{"entities/Students.html":{}}}],["entries",{"_index":569,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["entries.length",{"_index":570,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["entries.map(entry",{"_index":571,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["entry",{"_index":219,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["entry.registrationnumber",{"_index":534,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["err",{"_index":735,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["err.message",{"_index":738,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["err.stack",{"_index":737,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["error",{"_index":323,"title":{},"body":{"controllers/CameraController-1.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["error('image",{"_index":414,"title":{},"body":{"injectables/CameraService.html":{}}}],["error('timed",{"_index":423,"title":{},"body":{"injectables/CameraService.html":{}}}],["error.message",{"_index":413,"title":{},"body":{"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["error.stack",{"_index":757,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["errors",{"_index":347,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["event",{"_index":620,"title":{},"body":{"classes/FaceGateway.html":{}}}],["exam",{"_index":235,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["examendtime",{"_index":242,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["examendtime.setminutes(examstarttime.getminutes",{"_index":244,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["example",{"_index":895,"title":{},"body":{"index.html":{}}}],["examstarttime",{"_index":238,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["examstarttime.sethours(21",{"_index":239,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["execute",{"_index":340,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["existing",{"_index":218,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["exists",{"_index":217,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["exited",{"_index":355,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["exits",{"_index":351,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["experience",{"_index":961,"title":{},"body":{"index.html":{}}}],["export",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"modules/CameraModule.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"entities/FaceEntity.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"modules/FaceRecognitionModule.html":{},"injectables/FaceRecognitionService.html":{},"modules/GatewayModule.html":{},"classes/MarkAttendanceDto.html":{},"classes/MockEnrollDto.html":{},"entities/Students.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/CameraModule.html":{},"modules/FaceRecognitionModule.html":{},"modules/GatewayModule.html":{},"overview.html":{}}}],["exports:[attendanceservice",{"_index":189,"title":{},"body":{"modules/AttendanceModule.html":{}}}],["exports:[cameraservice",{"_index":361,"title":{},"body":{"modules/CameraModule.html":{}}}],["express",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"controllers/CameraController.html":{},"controllers/FaceRecognitionController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":669,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["extra",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["face",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"modules/FaceRecognitionModule.html":{},"injectables/FaceRecognitionService.html":{},"dependencies.html":{}}}],["face(s",{"_index":505,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["face.entity.ts",{"_index":594,"title":{},"body":{"entities/FaceEntity.html":{}}}],["faceapi",{"_index":432,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["faceapi.env.monkeypatch",{"_index":442,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["faceapi.euclideandistance(descriptor",{"_index":547,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["faceapi.nets.facelandmark68net.loadfromdisk(modelpath",{"_index":484,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["faceapi.nets.facerecognitionnet.loadfromdisk(modelpath",{"_index":485,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["faceapi.nets.tinyfacedetector.loadfromdisk(modelpath",{"_index":483,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["faceapi.tinyfacedetectoroptions",{"_index":496,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["facedescriptordata",{"_index":425,"title":{"interfaces/FaceDescriptorData.html":{}},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{},"coverage.html":{}}}],["faceentity",{"_index":42,"title":{"entities/FaceEntity.html":{}},"body":{"modules/AppModule.html":{},"interfaces/FaceDescriptorData.html":{},"entities/FaceEntity.html":{},"modules/FaceRecognitionModule.html":{},"injectables/FaceRecognitionService.html":{},"entities/Students.html":{},"coverage.html":{}}}],["faceentity.student",{"_index":805,"title":{},"body":{"entities/Students.html":{}}}],["facegateway",{"_index":45,"title":{"classes/FaceGateway.html":{}},"body":{"modules/AppModule.html":{},"interfaces/FaceDescriptorData.html":{},"classes/FaceGateway.html":{},"injectables/FaceRecognitionService.html":{},"modules/GatewayModule.html":{},"coverage.html":{},"overview.html":{}}}],["facegateway/face_gateway",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["facerecognitioncontroller",{"_index":656,"title":{"controllers/FaceRecognitionController.html":{}},"body":{"controllers/FaceRecognitionController.html":{},"modules/FaceRecognitionModule.html":{},"coverage.html":{}}}],["facerecognitionmodule",{"_index":14,"title":{"modules/FaceRecognitionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FaceRecognitionModule.html":{},"modules.html":{},"overview.html":{}}}],["facerecognitionservice",{"_index":456,"title":{"injectables/FaceRecognitionService.html":{}},"body":{"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"modules/FaceRecognitionModule.html":{},"injectables/FaceRecognitionService.html":{},"coverage.html":{},"overview.html":{}}}],["facerepository",{"_index":464,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["faces",{"_index":490,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["faceservice",{"_index":707,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["failed",{"_index":274,"title":{},"body":{"controllers/CameraController.html":{},"injectables/CameraService.html":{},"controllers/FaceRecognitionController.html":{}}}],["false",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["fast",{"_index":934,"title":{},"body":{"index.html":{}}}],["features",{"_index":944,"title":{},"body":{"index.html":{}}}],["feed",{"_index":680,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["fetch",{"_index":566,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["few",{"_index":936,"title":{},"body":{"index.html":{}}}],["file",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"modules/CameraModule.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"entities/FaceEntity.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"modules/FaceRecognitionModule.html":{},"injectables/FaceRecognitionService.html":{},"modules/GatewayModule.html":{},"classes/MarkAttendanceDto.html":{},"classes/MockEnrollDto.html":{},"entities/Students.html":{},"coverage.html":{}}}],["file.buffer",{"_index":730,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["file.originalname",{"_index":728,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["fileinterceptor",{"_index":692,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["filename",{"_index":266,"title":{},"body":{"controllers/CameraController.html":{},"injectables/CameraService.html":{},"controllers/FaceRecognitionController.html":{}}}],["filepath",{"_index":306,"title":{},"body":{"controllers/CameraController.html":{}}}],["filesystem",{"_index":479,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["filter",{"_index":549,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["finally",{"_index":741,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["first",{"_index":553,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["flask",{"_index":370,"title":{},"body":{"injectables/CameraService.html":{}}}],["float32array",{"_index":430,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["float32array(json.parse(entry.descriptor",{"_index":533,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["focus",{"_index":943,"title":{},"body":{"index.html":{}}}],["follow",{"_index":976,"title":{},"body":{"index.html":{}}}],["format",{"_index":712,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["found",{"_index":113,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["frames",{"_index":327,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["frames'})@apiresponse({status",{"_index":320,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["framework",{"_index":884,"title":{},"body":{"index.html":{}}}],["fs",{"_index":298,"title":{},"body":{"controllers/CameraController.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["fs.createreadstream(filepath",{"_index":309,"title":{},"body":{"controllers/CameraController.html":{}}}],["fs.createwritestream(savepath",{"_index":402,"title":{},"body":{"injectables/CameraService.html":{}}}],["fs.existssync(imagedir",{"_index":392,"title":{},"body":{"injectables/CameraService.html":{}}}],["fs.existssync(imagepath",{"_index":511,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["fs.existssync(temppath",{"_index":742,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["fs.mkdirsync(imagedir",{"_index":393,"title":{},"body":{"injectables/CameraService.html":{}}}],["fs.mkdirsync(uploaddir",{"_index":720,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["fs.unlinksync(imagepath",{"_index":512,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["fs.unlinksync(temppath",{"_index":743,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["fs.writefilesync(temppath",{"_index":729,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["full",{"_index":971,"title":{},"body":{"index.html":{}}}],["function",{"_index":837,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":880,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":939,"title":{},"body":{"index.html":{}}}],["gateway",{"_index":469,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"classes/FaceGateway.html":{},"injectables/FaceRecognitionService.html":{}}}],["gateway.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/FaceRecognitionModule.html":{}}}],["gateway.module.ts",{"_index":794,"title":{},"body":{"modules/GatewayModule.html":{}}}],["gateway/face",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/FaceRecognitionModule.html":{},"modules/GatewayModule.html":{}}}],["gatewaymodule",{"_index":15,"title":{"modules/GatewayModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FaceRecognitionModule.html":{},"modules/GatewayModule.html":{},"modules.html":{},"overview.html":{}}}],["get('all",{"_index":755,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["get('all')@apioperation({summary",{"_index":682,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["get('capture",{"_index":302,"title":{},"body":{"controllers/CameraController.html":{}}}],["get('capture')@apioperation({summary",{"_index":260,"title":{},"body":{"controllers/CameraController.html":{}}}],["get()@apioperation({summary",{"_index":123,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["getalldescriptors",{"_index":572,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["getattendancerecords",{"_index":193,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["getdescriptorbyregistrationnumber",{"_index":774,"title":{},"body":{"injectables/FaceRecognitionService.html":{}}}],["getdescriptorbyregistrationnumber(registrationnumber",{"_index":568,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["getrecords",{"_index":97,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["getting",{"_index":882,"title":{"index.html":{}},"body":{}}],["given",{"_index":293,"title":{},"body":{"controllers/CameraController.html":{},"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["graph",{"_index":965,"title":{},"body":{"index.html":{}}}],["groups",{"_index":700,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["grow",{"_index":986,"title":{},"body":{"index.html":{}}}],["handle",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["handleconnection",{"_index":609,"title":{},"body":{"classes/FaceGateway.html":{}}}],["handleconnection(client",{"_index":625,"title":{},"body":{"classes/FaceGateway.html":{}}}],["handledisconnect",{"_index":610,"title":{},"body":{"classes/FaceGateway.html":{}}}],["handledisconnect(client",{"_index":632,"title":{},"body":{"classes/FaceGateway.html":{}}}],["handles",{"_index":331,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["hands",{"_index":960,"title":{},"body":{"index.html":{}}}],["handy",{"_index":949,"title":{},"body":{"index.html":{}}}],["help",{"_index":963,"title":{},"body":{"index.html":{}}}],["here",{"_index":386,"title":{},"body":{"injectables/CameraService.html":{},"index.html":{}}}],["hook",{"_index":628,"title":{},"body":{"classes/FaceGateway.html":{}}}],["host",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["http://192.168.43.75:5000",{"_index":379,"title":{},"body":{"injectables/CameraService.html":{}}}],["https://nestjs.com",{"_index":999,"title":{},"body":{"index.html":{}}}],["id",{"_index":583,"title":{},"body":{"entities/FaceEntity.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{},"entities/Students.html":{}}}],["id:number",{"_index":819,"title":{},"body":{"entities/Students.html":{}}}],["identifier",{"_index":822,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":262,"title":{},"body":{"controllers/CameraController.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["image/jpg",{"_index":311,"title":{},"body":{"controllers/CameraController.html":{}}}],["imagedata",{"_index":445,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["imagedir",{"_index":387,"title":{},"body":{"injectables/CameraService.html":{}}}],["imagepath",{"_index":782,"title":{},"body":{"injectables/FaceRecognitionService.html":{}}}],["images",{"_index":287,"title":{},"body":{"controllers/CameraController.html":{},"injectables/CameraService.html":{}}}],["imagestream",{"_index":308,"title":{},"body":{"controllers/CameraController.html":{}}}],["imagestream.pipe(res",{"_index":312,"title":{},"body":{"controllers/CameraController.html":{}}}],["img",{"_index":492,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["implements",{"_index":457,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"classes/FaceGateway.html":{},"injectables/FaceRecognitionService.html":{}}}],["import",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"modules/CameraModule.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"entities/FaceEntity.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"modules/FaceRecognitionModule.html":{},"injectables/FaceRecognitionService.html":{},"modules/GatewayModule.html":{},"classes/MarkAttendanceDto.html":{},"classes/MockEnrollDto.html":{},"entities/Students.html":{}}}],["imports",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/FaceRecognitionModule.html":{}}}],["index",{"_index":93,"title":{"index.html":{}},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"entities/FaceEntity.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{},"classes/MarkAttendanceDto.html":{},"classes/MockEnrollDto.html":{},"entities/Students.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"modules/CameraModule.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"entities/FaceEntity.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"modules/FaceRecognitionModule.html":{},"injectables/FaceRecognitionService.html":{},"modules/GatewayModule.html":{},"classes/MarkAttendanceDto.html":{},"classes/MockEnrollDto.html":{},"entities/Students.html":{}}}],["information",{"_index":924,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":946,"title":{},"body":{"index.html":{}}}],["initialize",{"_index":723,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["initializes",{"_index":471,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["injectable",{"_index":190,"title":{"injectables/AttendanceService.html":{},"injectables/CameraService.html":{},"injectables/FaceRecognitionService.html":{}},"body":{"injectables/AttendanceService.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{},"coverage.html":{}}}],["injectables",{"_index":191,"title":{},"body":{"injectables/AttendanceService.html":{},"injectables/CameraService.html":{},"injectables/FaceRecognitionService.html":{},"overview.html":{}}}],["injectrepository",{"_index":221,"title":{},"body":{"injectables/AttendanceService.html":{},"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["injectrepository(faceentity",{"_index":463,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["injectrepository(students",{"_index":223,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["input",{"_index":146,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/CameraController-1.html":{}}}],["inputsize",{"_index":497,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["insert",{"_index":524,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["install",{"_index":938,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":897,"title":{},"body":{"index.html":{}}}],["instance",{"_index":648,"title":{},"body":{"classes/FaceGateway.html":{}}}],["interact",{"_index":966,"title":{},"body":{"index.html":{}}}],["interface",{"_index":424,"title":{"interfaces/FaceDescriptorData.html":{}},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":426,"title":{},"body":{"interfaces/FaceDescriptorData.html":{}}}],["internal",{"_index":321,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["internalservererrorexception",{"_index":691,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["internalservererrorexception('face",{"_index":739,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["internalservererrorexception('failed",{"_index":753,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["invalid",{"_index":145,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["isalreadymarked",{"_index":251,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["isuuid",{"_index":698,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["isuuid(id",{"_index":759,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["job",{"_index":979,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":981,"title":{},"body":{"index.html":{}}}],["join",{"_index":992,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":817,"title":{},"body":{"entities/Students.html":{}}}],["jpeg",{"_index":304,"title":{},"body":{"controllers/CameraController.html":{}}}],["jpeg'})@apiresponse({status",{"_index":272,"title":{},"body":{"controllers/CameraController.html":{}}}],["json",{"_index":602,"title":{},"body":{"entities/FaceEntity.html":{}}}],["json.parse(face.descriptor",{"_index":574,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["json.stringify(array.from(data.descriptor",{"_index":522,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["kamil",{"_index":996,"title":{},"body":{"index.html":{}}}],["key",{"_index":916,"title":{},"body":{"index.html":{}}}],["lastmarked",{"_index":249,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["lastmarkedat",{"_index":804,"title":{},"body":{"entities/Students.html":{}}}],["learn",{"_index":952,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/CameraModule.html":{},"modules/FaceRecognitionModule.html":{},"modules/GatewayModule.html":{},"overview.html":{}}}],["license",{"_index":1002,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":984,"title":{},"body":{"index.html":{}}}],["lifecycle",{"_index":627,"title":{},"body":{"classes/FaceGateway.html":{}}}],["linkedin",{"_index":978,"title":{},"body":{"index.html":{}}}],["list",{"_index":125,"title":{},"body":{"controllers/AttendanceController.html":{},"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["listen",{"_index":342,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["literal",{"_index":788,"title":{},"body":{"injectables/FaceRecognitionService.html":{},"miscellaneous/typealiases.html":{}}}],["live",{"_index":679,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["load",{"_index":476,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["loaddescriptorsfromdatabase",{"_index":529,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["loaded",{"_index":488,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["loadmodels",{"_index":480,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["loads",{"_index":472,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["located",{"_index":329,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["log",{"_index":350,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["logger",{"_index":364,"title":{},"body":{"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["logger(cameraservice.name",{"_index":377,"title":{},"body":{"injectables/CameraService.html":{}}}],["logger(facegateway.name",{"_index":611,"title":{},"body":{"classes/FaceGateway.html":{}}}],["logger(facerecognitioncontroller.name",{"_index":706,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["logger(facerecognitionservice.name",{"_index":458,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["looking",{"_index":925,"title":{},"body":{"index.html":{}}}],["loop",{"_index":974,"title":{},"body":{"index.html":{}}}],["lts.2",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["make",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["makes",{"_index":932,"title":{},"body":{"index.html":{}}}],["managing",{"_index":945,"title":{},"body":{"index.html":{}}}],["many",{"_index":285,"title":{},"body":{"controllers/CameraController.html":{}}}],["map((stored",{"_index":545,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["mark",{"_index":98,"title":{},"body":{"controllers/AttendanceController.html":{},"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["mark(@body",{"_index":172,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["mark(dto",{"_index":128,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["markattendance",{"_index":194,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["markattendance(registrationnumber",{"_index":203,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["markattendancedto",{"_index":129,"title":{"classes/MarkAttendanceDto.html":{}},"body":{"controllers/AttendanceController.html":{},"classes/MarkAttendanceDto.html":{},"coverage.html":{}}}],["marked",{"_index":132,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["marking",{"_index":465,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["markings",{"_index":209,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["marks",{"_index":205,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["match",{"_index":452,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["matches",{"_index":544,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["matches.length",{"_index":554,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["matches[0",{"_index":555,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["matching",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"modules/CameraModule.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"entities/FaceEntity.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"modules/FaceRecognitionModule.html":{},"injectables/FaceRecognitionService.html":{},"modules/GatewayModule.html":{},"classes/MarkAttendanceDto.html":{},"classes/MockEnrollDto.html":{},"entities/Students.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.min(...this.descriptors.map(d",{"_index":563,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["mau",{"_index":928,"title":{},"body":{"index.html":{}}}],["memory",{"_index":459,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["message",{"_index":177,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController-1.html":{},"controllers/FaceRecognitionController.html":{}}}],["metadata",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":94,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"injectables/CameraService.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["miscellaneous",{"_index":879,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":724,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["mit",{"_index":983,"title":{},"body":{"index.html":{}}}],["mock",{"_index":140,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{}}}],["mockenroll",{"_index":99,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["mockenroll(@body",{"_index":167,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["mockenroll(data",{"_index":136,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["mockenrolldto",{"_index":137,"title":{"classes/MockEnrollDto.html":{}},"body":{"controllers/AttendanceController.html":{},"classes/MockEnrollDto.html":{},"coverage.html":{}}}],["mockenrollstudent",{"_index":195,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["mockenrollstudent(name",{"_index":213,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["mode",{"_index":901,"title":{},"body":{"index.html":{}}}],["modelpath",{"_index":481,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["models",{"_index":473,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/CameraModule.html":{},"modules/FaceRecognitionModule.html":{},"modules/GatewayModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/CameraModule.html":{},"interfaces/FaceDescriptorData.html":{},"modules/FaceRecognitionModule.html":{},"injectables/FaceRecognitionService.html":{},"modules/GatewayModule.html":{},"overview.html":{}}}],["module.ts",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/CameraModule.html":{},"modules/FaceRecognitionModule.html":{},"modules/GatewayModule.html":{},"modules.html":{},"overview.html":{}}}],["monitoring",{"_index":649,"title":{},"body":{"classes/FaceGateway.html":{}}}],["monkey",{"_index":438,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["more",{"_index":923,"title":{},"body":{"index.html":{}}}],["multer",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["multermodule",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["multermodule.register",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["multiple",{"_index":208,"title":{},"body":{"injectables/AttendanceService.html":{},"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["mysql2",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":997,"title":{},"body":{"index.html":{}}}],["n",{"_index":282,"title":{},"body":{"controllers/CameraController.html":{}}}],["name",{"_index":118,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"injectables/CameraService.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{},"classes/MockEnrollDto.html":{},"entities/Students.html":{}}}],["named",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["need",{"_index":969,"title":{},"body":{"index.html":{}}}],["nest",{"_index":890,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1001,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":914,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"modules/CameraModule.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"modules/FaceRecognitionModule.html":{},"injectables/FaceRecognitionService.html":{},"modules/GatewayModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"controllers/FaceRecognitionController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":159,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"entities/FaceEntity.html":{},"controllers/FaceRecognitionController.html":{},"classes/MarkAttendanceDto.html":{},"classes/MockEnrollDto.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"injectables/AttendanceService.html":{},"interfaces/FaceDescriptorData.html":{},"modules/FaceRecognitionModule.html":{},"injectables/FaceRecognitionService.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":637,"title":{},"body":{"classes/FaceGateway.html":{},"dependencies.html":{}}}],["new",{"_index":230,"title":{},"body":{"injectables/AttendanceService.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{},"coverage.html":{}}}],["node.js",{"_index":441,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{},"index.html":{}}}],["notfoundexception",{"_index":220,"title":{},"body":{"injectables/AttendanceService.html":{},"controllers/FaceRecognitionController.html":{}}}],["notfoundexception('descriptor",{"_index":762,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["notfoundexception('student",{"_index":231,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["now",{"_index":714,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["npm",{"_index":896,"title":{},"body":{"index.html":{}}}],["null",{"_index":455,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["nullable",{"_index":806,"title":{},"body":{"entities/Students.html":{}}}],["number",{"_index":116,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"entities/FaceEntity.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{},"entities/Students.html":{}}}],["number'})@apiresponse({status",{"_index":107,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["number.max_value",{"_index":565,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["object",{"_index":711,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["offer",{"_index":980,"title":{},"body":{"index.html":{}}}],["official",{"_index":929,"title":{},"body":{"index.html":{}}}],["onetoone",{"_index":599,"title":{},"body":{"entities/FaceEntity.html":{},"entities/Students.html":{}}}],["onetoone(undefined",{"_index":591,"title":{},"body":{"entities/FaceEntity.html":{},"entities/Students.html":{}}}],["ongatewayconnection",{"_index":606,"title":{},"body":{"classes/FaceGateway.html":{}}}],["ongatewaydisconnect",{"_index":607,"title":{},"body":{"classes/FaceGateway.html":{}}}],["onmoduleinit",{"_index":431,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["open",{"_index":985,"title":{},"body":{"index.html":{}}}],["optional",{"_index":119,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"injectables/CameraService.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["origin",{"_index":641,"title":{},"body":{"classes/FaceGateway.html":{}}}],["out",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/CameraModule.html":{},"modules/FaceRecognitionModule.html":{},"modules/GatewayModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1006,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwriting",{"_index":526,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["package",{"_index":846,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":151,"title":{},"body":{"controllers/AttendanceController.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{}}}],["parameters",{"_index":117,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"injectables/CameraService.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["part",{"_index":970,"title":{},"body":{"index.html":{}}}],["password",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["patch",{"_index":439,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["path",{"_index":381,"title":{},"body":{"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["path.join(__dirname",{"_index":719,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["path.join(imagedir",{"_index":390,"title":{},"body":{"injectables/CameraService.html":{}}}],["path.join(process.cwd",{"_index":388,"title":{},"body":{"injectables/CameraService.html":{}}}],["path.join(uploaddir",{"_index":726,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["path.resolve(process.cwd",{"_index":482,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["payload",{"_index":616,"title":{},"body":{"classes/FaceGateway.html":{}}}],["pg",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["photo.jpg",{"_index":303,"title":{},"body":{"controllers/CameraController.html":{}}}],["photo.jpg)'})@apiresponse({status",{"_index":271,"title":{},"body":{"controllers/CameraController.html":{}}}],["pi",{"_index":264,"title":{},"body":{"controllers/CameraController.html":{},"injectables/CameraService.html":{}}}],["pibaseurl",{"_index":365,"title":{},"body":{"injectables/CameraService.html":{}}}],["platform",{"_index":927,"title":{},"body":{"index.html":{}}}],["please",{"_index":955,"title":{},"body":{"index.html":{}}}],["points",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["port",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["possible",{"_index":921,"title":{},"body":{"index.html":{}}}],["post",{"_index":149,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"controllers/FaceRecognitionController.html":{}}}],["post('detect",{"_index":708,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["post('detect')@apioperation({summary",{"_index":670,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["post('mark",{"_index":171,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["post('mark')@apioperation({summary",{"_index":130,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["post('mock",{"_index":138,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["post('recognize",{"_index":744,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["post('recognize')@apioperation({summary",{"_index":686,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["post('start",{"_index":313,"title":{},"body":{"controllers/CameraController.html":{},"controllers/CameraController-1.html":{}}}],["post('start')@apioperation({summary",{"_index":280,"title":{},"body":{"controllers/CameraController.html":{},"controllers/CameraController-1.html":{}}}],["postgres",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["postgres.render.com",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["potentially",{"_index":332,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["pre",{"_index":477,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["prefix",{"_index":91,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"controllers/FaceRecognitionController.html":{}}}],["prevent",{"_index":525,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["prevents",{"_index":207,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["primarygeneratedcolumn",{"_index":597,"title":{},"body":{"entities/FaceEntity.html":{},"entities/Students.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":601,"title":{},"body":{"entities/FaceEntity.html":{}}}],["private",{"_index":224,"title":{},"body":{"injectables/AttendanceService.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["process",{"_index":339,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["process.on('close",{"_index":352,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["process.stderr.on('data",{"_index":348,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["process.stdout.on('data",{"_index":344,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["production",{"_index":903,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":883,"title":{},"body":{"index.html":{}}}],["project",{"_index":893,"title":{},"body":{"index.html":{}}}],["promise",{"_index":371,"title":{},"body":{"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["promise((resolve",{"_index":404,"title":{},"body":{"injectables/CameraService.html":{}}}],["proper",{"_index":397,"title":{},"body":{"injectables/CameraService.html":{}}}],["properties",{"_index":363,"title":{"properties.html":{}},"body":{"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"entities/FaceEntity.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{},"classes/MarkAttendanceDto.html":{},"classes/MockEnrollDto.html":{},"entities/Students.html":{},"properties.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/CameraModule.html":{},"modules/FaceRecognitionModule.html":{},"modules/GatewayModule.html":{},"overview.html":{}}}],["python",{"_index":325,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["query",{"_index":294,"title":{},"body":{"controllers/CameraController.html":{},"injectables/CameraService.html":{}}}],["questions",{"_index":953,"title":{},"body":{"index.html":{}}}],["raspberry",{"_index":263,"title":{},"body":{"controllers/CameraController.html":{}}}],["read",{"_index":993,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":163,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["ready",{"_index":912,"title":{},"body":{"index.html":{}}}],["real",{"_index":967,"title":{},"body":{"index.html":{}}}],["recognition",{"_index":450,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["recognition.controller",{"_index":767,"title":{},"body":{"modules/FaceRecognitionModule.html":{}}}],["recognition.controller.ts",{"_index":657,"title":{},"body":{"controllers/FaceRecognitionController.html":{},"coverage.html":{}}}],["recognition.controller.ts:113",{"_index":688,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["recognition.controller.ts:152",{"_index":664,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["recognition.controller.ts:168",{"_index":684,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["recognition.controller.ts:180",{"_index":667,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["recognition.controller.ts:56",{"_index":677,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["recognition.model",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["recognition.model.ts",{"_index":766,"title":{},"body":{"modules/FaceRecognitionModule.html":{}}}],["recognition.services",{"_index":694,"title":{},"body":{"controllers/FaceRecognitionController.html":{},"modules/FaceRecognitionModule.html":{}}}],["recognition.services.ts",{"_index":428,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["recognition.services.ts:101",{"_index":789,"title":{},"body":{"injectables/FaceRecognitionService.html":{}}}],["recognition.services.ts:136",{"_index":784,"title":{},"body":{"injectables/FaceRecognitionService.html":{}}}],["recognition.services.ts:146",{"_index":783,"title":{},"body":{"injectables/FaceRecognitionService.html":{}}}],["recognition.services.ts:155",{"_index":779,"title":{},"body":{"injectables/FaceRecognitionService.html":{}}}],["recognition.services.ts:162",{"_index":780,"title":{},"body":{"injectables/FaceRecognitionService.html":{}}}],["recognition.services.ts:33",{"_index":791,"title":{},"body":{"injectables/FaceRecognitionService.html":{}}}],["recognition.services.ts:36",{"_index":778,"title":{},"body":{"injectables/FaceRecognitionService.html":{}}}],["recognition.services.ts:46",{"_index":787,"title":{},"body":{"injectables/FaceRecognitionService.html":{}}}],["recognition.services.ts:52",{"_index":786,"title":{},"body":{"injectables/FaceRecognitionService.html":{}}}],["recognition.services.ts:61",{"_index":781,"title":{},"body":{"injectables/FaceRecognitionService.html":{}}}],["recognition.services.ts:79",{"_index":790,"title":{},"body":{"injectables/FaceRecognitionService.html":{}}}],["recognition.services.ts:91",{"_index":785,"title":{},"body":{"injectables/FaceRecognitionService.html":{}}}],["recognitionresult",{"_index":451,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["recognitionresults",{"_index":747,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["recognize",{"_index":537,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["recognized",{"_index":562,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["recognizedusers",{"_index":541,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["recognizedusers.add(stored.registrationnumber",{"_index":558,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["recognizedusers.has(stored.registrationnumber",{"_index":556,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["recognizeface",{"_index":660,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["recognizeface(@uploadedfile",{"_index":745,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["recognizeface(file",{"_index":685,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["recognizes",{"_index":678,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["recognizeuser",{"_index":775,"title":{},"body":{"injectables/FaceRecognitionService.html":{}}}],["recognizeuser(detectedfaces",{"_index":539,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["records",{"_index":126,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["records'})@apiresponse({status",{"_index":124,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["recursive",{"_index":394,"title":{},"body":{"injectables/CameraService.html":{},"controllers/FaceRecognitionController.html":{}}}],["reflect",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":672,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["registered",{"_index":681,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["registration",{"_index":106,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["registrationnumber",{"_index":120,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"interfaces/FaceDescriptorData.html":{},"entities/FaceEntity.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{},"classes/MarkAttendanceDto.html":{},"classes/MockEnrollDto.html":{},"entities/Students.html":{}}}],["reject",{"_index":405,"title":{},"body":{"injectables/CameraService.html":{}}}],["rejectunauthorized",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["reload",{"_index":528,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["repository",{"_index":198,"title":{},"body":{"injectables/AttendanceService.html":{},"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{},"index.html":{}}}],["representing",{"_index":447,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["required",{"_index":267,"title":{},"body":{"controllers/CameraController.html":{},"controllers/FaceRecognitionController.html":{}}}],["requiring",{"_index":935,"title":{},"body":{"index.html":{}}}],["res",{"_index":258,"title":{},"body":{"controllers/CameraController.html":{}}}],["res.setheader('content",{"_index":310,"title":{},"body":{"controllers/CameraController.html":{}}}],["reset",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/CameraModule.html":{},"modules/FaceRecognitionModule.html":{},"modules/GatewayModule.html":{},"overview.html":{}}}],["resolve",{"_index":407,"title":{},"body":{"injectables/CameraService.html":{}}}],["resource",{"_index":642,"title":{},"body":{"classes/FaceGateway.html":{}}}],["resources",{"_index":947,"title":{},"body":{"index.html":{}}}],["response",{"_index":259,"title":{},"body":{"controllers/CameraController.html":{},"injectables/CameraService.html":{}}}],["response.data.pipe(writer",{"_index":403,"title":{},"body":{"injectables/CameraService.html":{}}}],["responsetype",{"_index":400,"title":{},"body":{"injectables/CameraService.html":{}}}],["result",{"_index":449,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["result.affected",{"_index":581,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["results",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"modules/CameraModule.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"entities/FaceEntity.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"modules/FaceRecognitionModule.html":{},"injectables/FaceRecognitionService.html":{},"modules/GatewayModule.html":{},"classes/MarkAttendanceDto.html":{},"classes/MockEnrollDto.html":{},"entities/Students.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.push",{"_index":559,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["retrieves",{"_index":754,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["return",{"_index":168,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController-1.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["returns",{"_index":121,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["root",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["routes",{"_index":701,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["run",{"_index":898,"title":{},"body":{"index.html":{}}}],["runs",{"_index":470,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{},"index.html":{}}}],["rxjs",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":211,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["save",{"_index":518,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["saved",{"_index":410,"title":{},"body":{"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["savedescriptor",{"_index":776,"title":{},"body":{"injectables/FaceRecognitionService.html":{}}}],["savedescriptor(data",{"_index":519,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["savepath",{"_index":389,"title":{},"body":{"injectables/CameraService.html":{}}}],["saves",{"_index":673,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["scalable",{"_index":887,"title":{},"body":{"index.html":{}}}],["schema",{"_index":710,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["scorethreshold",{"_index":499,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["script",{"_index":326,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["scripts/capture_send.py",{"_index":330,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["sda2unoad7e9sq6sermny3jchizqikvn",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["seconds",{"_index":286,"title":{},"body":{"controllers/CameraController.html":{},"injectables/CameraService.html":{}}}],["seconds'})@apiquery({name",{"_index":283,"title":{},"body":{"controllers/CameraController.html":{}}}],["send",{"_index":275,"title":{},"body":{"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"classes/FaceGateway.html":{}}}],["sending",{"_index":319,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["sends",{"_index":333,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["server",{"_index":322,"title":{},"body":{"controllers/CameraController-1.html":{},"injectables/CameraService.html":{},"classes/FaceGateway.html":{},"index.html":{}}}],["service",{"_index":466,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["services/face",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/FaceRecognitionModule.html":{}}}],["session",{"_index":212,"title":{},"body":{"injectables/AttendanceService.html":{},"injectables/CameraService.html":{}}}],["set",{"_index":542,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["setup",{"_index":894,"title":{},"body":{"index.html":{}}}],["sharing",{"_index":643,"title":{},"body":{"classes/FaceGateway.html":{}}}],["side",{"_index":888,"title":{},"body":{"index.html":{}}}],["simple",{"_index":937,"title":{},"body":{"index.html":{}}}],["single",{"_index":261,"title":{},"body":{"controllers/CameraController.html":{},"injectables/CameraService.html":{}}}],["socket",{"_index":335,"title":{},"body":{"controllers/CameraController-1.html":{},"classes/FaceGateway.html":{}}}],["socket.io",{"_index":638,"title":{},"body":{"classes/FaceGateway.html":{},"dependencies.html":{}}}],["source",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"modules/CameraModule.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"entities/FaceEntity.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"modules/FaceRecognitionModule.html":{},"injectables/FaceRecognitionService.html":{},"modules/GatewayModule.html":{},"classes/MarkAttendanceDto.html":{},"classes/MockEnrollDto.html":{},"entities/Students.html":{},"index.html":{}}}],["spawn",{"_index":336,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["spawn('python",{"_index":341,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["specific",{"_index":567,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["sponsors",{"_index":988,"title":{},"body":{"index.html":{}}}],["src/.../face",{"_index":1016,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":881,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":22,"title":{},"body":{"modules/AppModule.html":{}}}],["src/attendance/attendance.controller.ts",{"_index":90,"title":{},"body":{"controllers/AttendanceController.html":{},"coverage.html":{}}}],["src/attendance/attendance.controller.ts:19",{"_index":147,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["src/attendance/attendance.controller.ts:30",{"_index":133,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["src/attendance/attendance.controller.ts:41",{"_index":127,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["src/attendance/attendance.controller.ts:52",{"_index":115,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["src/attendance/attendance.module",{"_index":768,"title":{},"body":{"modules/FaceRecognitionModule.html":{}}}],["src/attendance/attendance.module.ts",{"_index":185,"title":{},"body":{"modules/AttendanceModule.html":{}}}],["src/attendance/attendance.service",{"_index":436,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["src/attendance/attendance.service.ts",{"_index":192,"title":{},"body":{"injectables/AttendanceService.html":{},"coverage.html":{}}}],["src/attendance/attendance.service.ts:103",{"_index":201,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["src/attendance/attendance.service.ts:17",{"_index":214,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["src/attendance/attendance.service.ts:31",{"_index":204,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["src/attendance/attendance.service.ts:7",{"_index":199,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["src/attendance/attendance.service.ts:96",{"_index":202,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["src/attendance/dto/markattendance_dto.ts",{"_index":796,"title":{},"body":{"classes/MarkAttendanceDto.html":{},"coverage.html":{}}}],["src/attendance/dto/markattendance_dto.ts:5",{"_index":797,"title":{},"body":{"classes/MarkAttendanceDto.html":{}}}],["src/attendance/dto/mockenroll_dto.ts",{"_index":798,"title":{},"body":{"classes/MockEnrollDto.html":{},"coverage.html":{}}}],["src/attendance/dto/mockenroll_dto.ts:6",{"_index":799,"title":{},"body":{"classes/MockEnrollDto.html":{}}}],["src/attendance/dto/mockenroll_dto.ts:8",{"_index":800,"title":{},"body":{"classes/MockEnrollDto.html":{}}}],["src/attendance/students.entity",{"_index":596,"title":{},"body":{"entities/FaceEntity.html":{}}}],["src/attendance/students.entity.ts",{"_index":803,"title":{},"body":{"entities/Students.html":{},"coverage.html":{}}}],["src/attendance/students.entity.ts:12",{"_index":812,"title":{},"body":{"entities/Students.html":{}}}],["src/attendance/students.entity.ts:15",{"_index":814,"title":{},"body":{"entities/Students.html":{}}}],["src/attendance/students.entity.ts:18",{"_index":815,"title":{},"body":{"entities/Students.html":{}}}],["src/attendance/students.entity.ts:21",{"_index":811,"title":{},"body":{"entities/Students.html":{}}}],["src/attendance/students.entity.ts:25",{"_index":808,"title":{},"body":{"entities/Students.html":{}}}],["src/attendance/students.entity.ts:9",{"_index":810,"title":{},"body":{"entities/Students.html":{}}}],["src/camera/camera.controller.ts",{"_index":253,"title":{},"body":{"controllers/CameraController.html":{},"coverage.html":{}}}],["src/camera/camera.controller.ts:25",{"_index":276,"title":{},"body":{"controllers/CameraController.html":{}}}],["src/camera/camera.controller.ts:43",{"_index":288,"title":{},"body":{"controllers/CameraController.html":{}}}],["src/camera/camera.module",{"_index":769,"title":{},"body":{"modules/FaceRecognitionModule.html":{}}}],["src/camera/camera.module.ts",{"_index":359,"title":{},"body":{"modules/CameraModule.html":{}}}],["src/camera/camera.service.ts",{"_index":362,"title":{},"body":{"injectables/CameraService.html":{},"coverage.html":{}}}],["src/camera/camera.service.ts:11",{"_index":380,"title":{},"body":{"injectables/CameraService.html":{}}}],["src/camera/camera.service.ts:16",{"_index":369,"title":{},"body":{"injectables/CameraService.html":{}}}],["src/camera/camera.service.ts:52",{"_index":373,"title":{},"body":{"injectables/CameraService.html":{}}}],["src/camera/camera.service.ts:8",{"_index":378,"title":{},"body":{"injectables/CameraService.html":{}}}],["src/entities/face.entity",{"_index":435,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"modules/FaceRecognitionModule.html":{},"injectables/FaceRecognitionService.html":{},"entities/Students.html":{}}}],["src/entities/face.entity.ts",{"_index":582,"title":{},"body":{"entities/FaceEntity.html":{},"coverage.html":{}}}],["src/entities/face.entity.ts:10",{"_index":588,"title":{},"body":{"entities/FaceEntity.html":{}}}],["src/entities/face.entity.ts:13",{"_index":586,"title":{},"body":{"entities/FaceEntity.html":{}}}],["src/entities/face.entity.ts:16",{"_index":590,"title":{},"body":{"entities/FaceEntity.html":{}}}],["src/entities/face.entity.ts:19",{"_index":593,"title":{},"body":{"entities/FaceEntity.html":{}}}],["src/face",{"_index":770,"title":{},"body":{"modules/FaceRecognitionModule.html":{},"modules/GatewayModule.html":{}}}],["src/facegateway/face_gateway",{"_index":437,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{},"modules/GatewayModule.html":{}}}],["src/facegateway/face_gateway.ts",{"_index":605,"title":{},"body":{"classes/FaceGateway.html":{},"coverage.html":{}}}],["src/facegateway/face_gateway.ts:19",{"_index":614,"title":{},"body":{"classes/FaceGateway.html":{}}}],["src/facegateway/face_gateway.ts:22",{"_index":612,"title":{},"body":{"classes/FaceGateway.html":{}}}],["src/facegateway/face_gateway.ts:28",{"_index":626,"title":{},"body":{"classes/FaceGateway.html":{}}}],["src/facegateway/face_gateway.ts:36",{"_index":633,"title":{},"body":{"classes/FaceGateway.html":{}}}],["src/facegateway/face_gateway.ts:45",{"_index":617,"title":{},"body":{"classes/FaceGateway.html":{}}}],["src/gateway/gateway.module.ts",{"_index":795,"title":{},"body":{"modules/GatewayModule.html":{}}}],["src/main.ts",{"_index":836,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/services/camera.controller.ts",{"_index":315,"title":{},"body":{"controllers/CameraController-1.html":{},"coverage.html":{}}}],["src/services/camera.controller.ts:18",{"_index":324,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["src/services/face",{"_index":427,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"modules/FaceRecognitionModule.html":{},"injectables/FaceRecognitionService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ssl",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["start",{"_index":236,"title":{},"body":{"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"injectables/CameraService.html":{},"index.html":{}}}],["start:dev",{"_index":902,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":904,"title":{},"body":{"index.html":{}}}],["startcamera",{"_index":316,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["startcapture",{"_index":256,"title":{},"body":{"controllers/CameraController.html":{}}}],["startcapture(@query('duration",{"_index":314,"title":{},"body":{"controllers/CameraController.html":{}}}],["startcapture(duration",{"_index":279,"title":{},"body":{"controllers/CameraController.html":{}}}],["started",{"_index":318,"title":{"index.html":{}},"body":{"controllers/CameraController-1.html":{},"injectables/CameraService.html":{}}}],["starter",{"_index":892,"title":{},"body":{"index.html":{}}}],["starts",{"_index":290,"title":{},"body":{"controllers/CameraController.html":{},"controllers/CameraController-1.html":{}}}],["starttimedcapture",{"_index":367,"title":{},"body":{"injectables/CameraService.html":{}}}],["starttimedcapture(duration",{"_index":372,"title":{},"body":{"injectables/CameraService.html":{}}}],["starturl",{"_index":415,"title":{},"body":{"injectables/CameraService.html":{}}}],["statements",{"_index":823,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":165,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"controllers/FaceRecognitionController.html":{},"entities/Students.html":{}}}],["stay",{"_index":973,"title":{},"body":{"index.html":{}}}],["stderr",{"_index":346,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["stdout",{"_index":343,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["steps",{"_index":917,"title":{},"body":{"index.html":{}}}],["storage",{"_index":460,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["store",{"_index":448,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"entities/FaceEntity.html":{},"injectables/FaceRecognitionService.html":{}}}],["stored",{"_index":546,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["stored.descriptor",{"_index":548,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["stored.registrationnumber",{"_index":560,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["straightforward",{"_index":933,"title":{},"body":{"index.html":{}}}],["stream",{"_index":338,"title":{},"body":{"controllers/CameraController-1.html":{},"injectables/CameraService.html":{}}}],["stream'})@apiresponse({status",{"_index":317,"title":{},"body":{"controllers/CameraController-1.html":{}}}],["string",{"_index":101,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"entities/FaceEntity.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{},"classes/MarkAttendanceDto.html":{},"classes/MockEnrollDto.html":{},"entities/Students.html":{}}}],["student",{"_index":105,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"entities/FaceEntity.html":{}}}],["student'})@apiresponse({status",{"_index":131,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["student.faceentity",{"_index":592,"title":{},"body":{"entities/FaceEntity.html":{}}}],["student.lastmarkedat",{"_index":248,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["students",{"_index":40,"title":{"entities/Students.html":{}},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"injectables/AttendanceService.html":{},"entities/FaceEntity.html":{},"entities/Students.html":{},"coverage.html":{}}}],["students,faceentity",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["students.entity",{"_index":186,"title":{},"body":{"modules/AttendanceModule.html":{},"injectables/AttendanceService.html":{}}}],["students.entity.ts",{"_index":816,"title":{},"body":{"entities/Students.html":{}}}],["studentsrepo",{"_index":200,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["successfully",{"_index":166,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/CameraService.html":{},"controllers/FaceRecognitionController.html":{}}}],["successfully'})@apiresponse({status",{"_index":111,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["successfully.'})@apiresponse({status",{"_index":663,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["summary",{"_index":164,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"controllers/FaceRecognitionController.html":{}}}],["support",{"_index":954,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["svg",{"_index":1004,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":703,"title":{},"body":{"controllers/FaceRecognitionController.html":{},"dependencies.html":{}}}],["synchronize",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":845,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":844,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":918,"title":{},"body":{"index.html":{}}}],["temppath",{"_index":721,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["tensorflow/tfjs",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["test",{"_index":907,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":910,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":909,"title":{},"body":{"index.html":{}}}],["tests",{"_index":905,"title":{},"body":{"index.html":{}}}],["text",{"_index":585,"title":{},"body":{"entities/FaceEntity.html":{}}}],["thanks",{"_index":987,"title":{},"body":{"index.html":{}}}],["this.attendanceservice.deletestudent(registrationnumber",{"_index":181,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["this.attendanceservice.getattendancerecords",{"_index":178,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["this.attendanceservice.markattendance(dto.registrationnumber",{"_index":176,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["this.attendanceservice.markattendance(stored.registrationnumber",{"_index":557,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["this.attendanceservice.mockenrollstudent(data.name",{"_index":169,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["this.cameraservice.captureimage(filename",{"_index":307,"title":{},"body":{"controllers/CameraController.html":{},"controllers/FaceRecognitionController.html":{}}}],["this.descriptors",{"_index":531,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["this.descriptors.length",{"_index":536,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["this.facegateway.emitevent('face",{"_index":506,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["this.facerepository.clear",{"_index":576,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["this.facerepository.create",{"_index":521,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["this.facerepository.delete(id",{"_index":579,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["this.facerepository.find",{"_index":530,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["this.facerepository.insert(entity",{"_index":523,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["this.faceservice.deletealldescriptors",{"_index":752,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["this.faceservice.deletedescriptorbyid(id",{"_index":761,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["this.faceservice.detectface(temppath",{"_index":731,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["this.faceservice.getalldescriptors",{"_index":756,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["this.faceservice.recognizeuser(detections",{"_index":748,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["this.faceservice.savedescriptor",{"_index":733,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["this.loaddescriptorsfromdatabase",{"_index":475,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["this.loadmodels",{"_index":474,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["this.logger.error('detection",{"_index":736,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["this.logger.error('failed",{"_index":412,"title":{},"body":{"injectables/CameraService.html":{},"controllers/FaceRecognitionController.html":{}}}],["this.logger.error('recognition",{"_index":749,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["this.logger.log('all",{"_index":577,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["this.logger.log(`client",{"_index":651,"title":{},"body":{"classes/FaceGateway.html":{}}}],["this.logger.log(`descriptor",{"_index":527,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["this.logger.log(`detected",{"_index":503,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["this.logger.log(`event",{"_index":654,"title":{},"body":{"classes/FaceGateway.html":{}}}],["this.logger.log(`face",{"_index":486,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["this.logger.log(`image",{"_index":409,"title":{},"body":{"injectables/CameraService.html":{}}}],["this.logger.log(`loaded",{"_index":535,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["this.logger.log(`requesting",{"_index":398,"title":{},"body":{"injectables/CameraService.html":{}}}],["this.logger.log(`starting",{"_index":418,"title":{},"body":{"injectables/CameraService.html":{}}}],["this.logger.log(`timed",{"_index":422,"title":{},"body":{"injectables/CameraService.html":{}}}],["this.logger.warn(`face",{"_index":561,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["this.pibaseurl}/capture",{"_index":396,"title":{},"body":{"injectables/CameraService.html":{}}}],["this.pibaseurl}/start",{"_index":416,"title":{},"body":{"injectables/CameraService.html":{}}}],["this.server.emit(event",{"_index":653,"title":{},"body":{"classes/FaceGateway.html":{}}}],["this.studentsrepo.create",{"_index":226,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["this.studentsrepo.findone",{"_index":225,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["this.studentsrepo.save(students",{"_index":228,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["threshold",{"_index":540,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["throw",{"_index":229,"title":{},"body":{"injectables/AttendanceService.html":{},"injectables/CameraService.html":{},"controllers/FaceRecognitionController.html":{}}}],["time",{"_index":237,"title":{},"body":{"injectables/AttendanceService.html":{},"index.html":{}}}],["timed",{"_index":419,"title":{},"body":{"injectables/CameraService.html":{}}}],["timestamp",{"_index":509,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{},"entities/Students.html":{}}}],["touch",{"_index":994,"title":{},"body":{"index.html":{}}}],["trained",{"_index":478,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["triggered",{"_index":629,"title":{},"body":{"classes/FaceGateway.html":{}}}],["true",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"controllers/CameraController.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"entities/FaceEntity.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{},"entities/Students.html":{}}}],["true})@joincolumn",{"_index":807,"title":{},"body":{"entities/Students.html":{}}}],["try",{"_index":391,"title":{},"body":{"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["twitter",{"_index":1000,"title":{},"body":{"index.html":{}}}],["type",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"injectables/CameraService.html":{},"interfaces/FaceDescriptorData.html":{},"entities/FaceEntity.html":{},"classes/FaceGateway.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{},"classes/MarkAttendanceDto.html":{},"classes/MockEnrollDto.html":{},"entities/Students.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":1014,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":222,"title":{},"body":{"injectables/AttendanceService.html":{},"interfaces/FaceDescriptorData.html":{},"entities/FaceEntity.html":{},"injectables/FaceRecognitionService.html":{},"entities/Students.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/FaceRecognitionModule.html":{}}}],["typeormmodule.forfeature([faceentity",{"_index":771,"title":{},"body":{"modules/FaceRecognitionModule.html":{}}}],["typeormmodule.forfeature([students",{"_index":188,"title":{},"body":{"modules/AttendanceModule.html":{}}}],["typeormmodule.forroot",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":891,"title":{},"body":{"index.html":{}}}],["ui",{"_index":704,"title":{},"body":{"controllers/FaceRecognitionController.html":{},"dependencies.html":{}}}],["undefined",{"_index":722,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["undefined})@useinterceptors(undefined",{"_index":676,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["under",{"_index":702,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["underlying",{"_index":647,"title":{},"body":{"classes/FaceGateway.html":{}}}],["unique",{"_index":603,"title":{},"body":{"entities/FaceEntity.html":{},"entities/Students.html":{}}}],["unit",{"_index":906,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":122,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/CameraController.html":{},"controllers/CameraController-1.html":{},"controllers/FaceRecognitionController.html":{}}}],["unlicensed",{"_index":1013,"title":{},"body":{"properties.html":{}}}],["unzipper",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["up",{"_index":514,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["updated",{"_index":174,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["updates",{"_index":975,"title":{},"body":{"index.html":{}}}],["uploaddir",{"_index":718,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["uploaded",{"_index":515,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["uploadedfile",{"_index":689,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["uploads",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"controllers/FaceRecognitionController.html":{}}}],["url",{"_index":384,"title":{},"body":{"injectables/CameraService.html":{}}}],["use",{"_index":746,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["useinterceptors",{"_index":690,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":715,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["user",{"_index":538,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{}}}],["username",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["usersservice",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":134,"title":{},"body":{"controllers/AttendanceController.html":{},"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{},"index.html":{}}}],["uuid",{"_index":580,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"controllers/FaceRecognitionController.html":{},"injectables/FaceRecognitionService.html":{},"dependencies.html":{}}}],["validate",{"_index":697,"title":{},"body":{"controllers/FaceRecognitionController.html":{}}}],["value",{"_index":376,"title":{},"body":{"injectables/CameraService.html":{},"classes/FaceGateway.html":{},"injectables/FaceRecognitionService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":838,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1017,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1011,"title":{},"body":{"properties.html":{}}}],["via",{"_index":420,"title":{},"body":{"injectables/CameraService.html":{}}}],["video",{"_index":374,"title":{},"body":{"injectables/CameraService.html":{},"index.html":{}}}],["visit",{"_index":951,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":964,"title":{},"body":{"index.html":{}}}],["void",{"_index":624,"title":{},"body":{"classes/FaceGateway.html":{}}}],["watch",{"_index":900,"title":{},"body":{"index.html":{}}}],["website",{"_index":998,"title":{},"body":{"index.html":{}}}],["websocket",{"_index":622,"title":{},"body":{"classes/FaceGateway.html":{}}}],["websocket/event",{"_index":467,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["websocketgateway",{"_index":636,"title":{},"body":{"classes/FaceGateway.html":{}}}],["websocketserver",{"_index":613,"title":{},"body":{"classes/FaceGateway.html":{}}}],["withfacedescriptors",{"_index":502,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["withfacelandmarks",{"_index":501,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["within",{"_index":210,"title":{},"body":{"injectables/AttendanceService.html":{},"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["work",{"_index":440,"title":{},"body":{"interfaces/FaceDescriptorData.html":{},"injectables/FaceRecognitionService.html":{}}}],["working",{"_index":950,"title":{},"body":{"index.html":{}}}],["writer",{"_index":401,"title":{},"body":{"injectables/CameraService.html":{}}}],["writer.on('error",{"_index":408,"title":{},"body":{"injectables/CameraService.html":{}}}],["writer.on('finish",{"_index":406,"title":{},"body":{"injectables/CameraService.html":{}}}],["x",{"_index":977,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":991,"title":{},"body":{"index.html":{}}}],["you're",{"_index":911,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/CameraModule.html":{},"modules/FaceRecognitionModule.html":{},"modules/GatewayModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAttendanceModule\n\nAttendanceModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAttendanceModule->AppModule\n\n\n\n\n\nCameraModule\n\nCameraModule\n\nAppModule -->\n\nCameraModule->AppModule\n\n\n\n\n\nFaceRecognitionModule\n\nFaceRecognitionModule\n\nAppModule -->\n\nFaceRecognitionModule->AppModule\n\n\n\n\n\nGatewayModule\n\nGatewayModule\n\nAppModule -->\n\nGatewayModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AttendanceModule\n                        \n                        \n                            CameraModule\n                        \n                        \n                            FaceRecognitionModule\n                        \n                        \n                            GatewayModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AttendanceModule } from './attendance/attendance.module';\nimport { FaceRecognitionModule } from './services/face-recognition.model'; // Make sure this is correctly named and points to a `.module.ts` file\n\nimport { Students } from './attendance/students.entity';\nimport { FaceEntity } from './Entities/face.entity';\nimport { CameraModule } from './camera/camera.module';\nimport { FaceGateway } from './FaceGateway/face_gateway';\nimport { GatewayModule } from './face-gateway/face-gateway.module';\n\n@Module({\n  imports: [\n    MulterModule.register({ dest: './uploads' }),\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: 'dpg-d0rj9vbipnbc73b9v590-a.oregon-postgres.render.com',\n      port: 5432,\n      username: 'root',\n      password: 'sdA2unoaD7e9Sq6sErMNY3JchIZQIkVN',\n      database: 'attendance_04gg',\n        ssl: true,\n  extra: {\n    ssl: {\n      rejectUnauthorized: false,\n    },\n  },\n      entities: [Students,FaceEntity],\n      synchronize: false,\n    }),\n    AttendanceModule,\n    FaceRecognitionModule,\n    CameraModule,\n    GatewayModule, // This module should handle the controller/service\n  ],\n  controllers: [],\n  providers: [FaceGateway],\n  \n  \n  // controllers: [AppController, UsersController],\n  // providers: [AppService, UsersService],\n //exports: [UsersService, FaceRecognitionModule],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AttendanceController.html":{"url":"controllers/AttendanceController.html","title":"controller - AttendanceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AttendanceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/attendance/attendance.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                attendance\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteStudent\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getRecords\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                mark\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                mockEnroll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        deleteStudent\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteStudent(registrationNumber: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':registrationNumber')@ApiOperation({summary: 'Delete student by registration number'})@ApiResponse({status: 200, description: 'Student deleted successfully'})@ApiResponse({status: 404, description: 'Student not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/attendance/attendance.controller.ts:52\n                        \n                    \n\n\n            \n                \n                        Delete a student by registration number\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registrationNumber\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getRecords\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRecords()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all attendance records'})@ApiResponse({status: 200, description: 'List of all attendance records'})\n                \n            \n\n                    \n                        \n                            Defined in src/attendance/attendance.controller.ts:41\n                        \n                    \n\n\n            \n                \n                        Get all attendance records\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        mark\n                        \n                    \n                \n            \n            \n                \n                        \n                    mark(dto: MarkAttendanceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('mark')@ApiOperation({summary: 'Mark attendance for a student'})@ApiResponse({status: 200, description: 'Attendance marked successfully'})@ApiResponse({status: 404, description: 'Student not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/attendance/attendance.controller.ts:30\n                        \n                    \n\n\n            \n                \n                        Mark attendance for a student using registration number\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            MarkAttendanceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        mockEnroll\n                        \n                    \n                \n            \n            \n                \n                        \n                    mockEnroll(data: MockEnrollDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('mock-enroll')@ApiOperation({summary: 'Mock enroll a student'})@ApiResponse({status: 201, description: 'Student enrolled successfully'})@ApiResponse({status: 400, description: 'Invalid input'})\n                \n            \n\n                    \n                        \n                            Defined in src/attendance/attendance.controller.ts:19\n                        \n                    \n\n\n            \n                \n                        Mock enroll a student with name and registration number\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            MockEnrollDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, Get, Delete, Param } from '@nestjs/common';\nimport { AttendanceService } from './attendance.service';\nimport { MarkAttendanceDto } from './dto/markattendance_dto';\nimport { MockEnrollDto } from './dto/mockenroll_dto';\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\n\n@ApiTags('Attendance') \n@Controller('attendance')\nexport class AttendanceController {\n  constructor(private readonly attendanceService: AttendanceService) {}\n\n  /**\n   * Mock enroll a student with name and registration number\n   */\n  @Post('mock-enroll')\n  @ApiOperation({ summary: 'Mock enroll a student' })\n  @ApiResponse({ status: 201, description: 'Student enrolled successfully' })\n  @ApiResponse({ status: 400, description: 'Invalid input' })\n  async mockEnroll(@Body() data: MockEnrollDto) {\n    return this.attendanceService.mockEnrollStudent(data.name, data.registrationNumber);\n  }\n\n  /**\n   * Mark attendance for a student using registration number\n   */\n  @Post('mark')\n  @ApiOperation({ summary: 'Mark attendance for a student' })\n  @ApiResponse({ status: 200, description: 'Attendance marked successfully' })\n  @ApiResponse({ status: 404, description: 'Student not found' })\n  async mark(@Body() dto: MarkAttendanceDto) {\n    const updated = await this.attendanceService.markAttendance(dto.registrationNumber);\n    return { message: 'Attendance marked', student: updated };\n  }\n\n  /**\n   * Get all attendance records\n   */\n  @Get()\n  @ApiOperation({ summary: 'Get all attendance records' })\n  @ApiResponse({ status: 200, description: 'List of all attendance records' })\n  async getRecords() {\n    return this.attendanceService.getAttendanceRecords();\n  }\n\n  /**\n   * Delete a student by registration number\n   */\n  @Delete(':registrationNumber')\n  @ApiOperation({ summary: 'Delete student by registration number' })\n  @ApiResponse({ status: 200, description: 'Student deleted successfully' })\n  @ApiResponse({ status: 404, description: 'Student not found' })\n  async deleteStudent(@Param('registrationNumber') registrationNumber: string) {\n    return this.attendanceService.deleteStudent(registrationNumber);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AttendanceModule.html":{"url":"modules/AttendanceModule.html","title":"module - AttendanceModule","body":"\n                   \n\n\n\n\n    Modules\n    AttendanceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AttendanceModule\n\n\n\ncluster_AttendanceModule_exports\n\n\n\ncluster_AttendanceModule_providers\n\n\n\n\nAttendanceService \n\nAttendanceService \n\n\n\nAttendanceModule\n\nAttendanceModule\n\nAttendanceService  -->\n\nAttendanceModule->AttendanceService \n\n\n\n\n\nAttendanceService\n\nAttendanceService\n\nAttendanceModule -->\n\nAttendanceService->AttendanceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/attendance/attendance.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AttendanceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AttendanceController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AttendanceService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Students} from './students.entity';\nimport { AttendanceService } from './attendance.service';\nimport { AttendanceController } from './attendance.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Students])],\n  controllers: [AttendanceController],\n  providers: [AttendanceService],\n  exports:[AttendanceService]\n})\nexport class AttendanceModule {}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AttendanceService.html":{"url":"injectables/AttendanceService.html","title":"injectable - AttendanceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AttendanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/attendance/attendance.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteStudent\n                            \n                            \n                                    Async\n                                getAttendanceRecords\n                            \n                            \n                                    Async\n                                markAttendance\n                            \n                            \n                                    Async\n                                mockEnrollStudent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(studentsRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/attendance/attendance.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        studentsRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteStudent\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteStudent(registrationNumber: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/attendance/attendance.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registrationNumber\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAttendanceRecords\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAttendanceRecords()\n                \n            \n\n\n                    \n                        \n                            Defined in src/attendance/attendance.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        markAttendance\n                        \n                    \n                \n            \n            \n                \n                        \n                    markAttendance(registrationNumber: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/attendance/attendance.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Marks attendance for a student based on their registration number.\nPrevents multiple markings within the same session.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registrationNumber\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        mockEnrollStudent\n                        \n                    \n                \n            \n            \n                \n                        \n                    mockEnrollStudent(name: string, registrationNumber: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/attendance/attendance.service.ts:17\n                        \n                    \n\n\n            \n                \n                        Mock enrollment of a student\nIf the student already exists, return the existing entry.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                registrationNumber\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Students } from './students.entity';\n\n@Injectable()\nexport class AttendanceService {\n  constructor(\n    @InjectRepository(Students)\n    private readonly studentsRepo: Repository\n  ) {}\n\n  /**\n   * Mock enrollment of a student \n   * If the student already exists, return the existing entry.\n   */\n  async mockEnrollStudent(name: string, registrationNumber: string) {\n    const existing = await this.studentsRepo.findOne({ where: { registrationNumber } });\n    if (existing) {\n      return { message: 'Student already exists', students: existing };\n    }\n\n    const students = this.studentsRepo.create({ name, registrationNumber, status: 'absent' });\n    return this.studentsRepo.save(students);\n  }\n\n  /**\n   * Marks attendance for a student based on their registration number.\n   * Prevents multiple markings within the same session.\n   */\n  async markAttendance(registrationNumber: string) {\n    const student = await this.studentsRepo.findOne({ where: { registrationNumber } });\n\n    if (!student) {\n      throw new NotFoundException('Student not found');\n    }\n\n    const currentTime = new Date();\n\n    // Define exam start and  time \n    const examStartTime = new Date();\n    examStartTime.setHours(21, 50, 0, 0); \n    \n    const examEndTime = new Date(examStartTime);\n    examEndTime.setMinutes(examStartTime.getMinutes() + 1); \n\n    // Check if the student has already been marked during this session\n    if (student.lastMarkedAt) {\n      const lastMarked = new Date(student.lastMarkedAt);\n\n      const isAlreadyMarked =\n        lastMarked >= examStartTime && lastMarked  examStartTime && currentTime \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CameraController.html":{"url":"controllers/CameraController.html","title":"controller - CameraController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CameraController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/camera/camera.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                camera\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                capture\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                startCapture\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        capture\n                        \n                    \n                \n            \n            \n                \n                        \n                    capture(filename: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('capture')@ApiOperation({summary: 'Capture a single image from Raspberry Pi camera'})@ApiQuery({name: 'filename', required: true, description: 'The filename to assign to the captured image (e.g., photo.jpg)'})@ApiResponse({status: 200, description: 'Returns the captured image as JPEG'})@ApiResponse({status: 500, description: 'Failed to capture or send image'})\n                \n            \n\n                    \n                        \n                            Defined in src/camera/camera.controller.ts:25\n                        \n                    \n\n\n            \n                \n                        GET /camera/capture\nCaptures a single image from the Raspberry Pi and returns it.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        startCapture\n                        \n                    \n                \n            \n            \n                \n                        \n                    startCapture(duration: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('start')@ApiOperation({summary: 'Start continuous image capture for N seconds'})@ApiQuery({name: 'duration', required: true, description: 'How many seconds to capture images'})\n                \n            \n\n                    \n                        \n                            Defined in src/camera/camera.controller.ts:43\n                        \n                    \n\n\n            \n                \n                        POST /camera/start\nStarts camera auto-capturing for a given duration (in seconds).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query, Res, Post, BadRequestException } from '@nestjs/common';\nimport { CameraService } from './camera.service';\nimport { Response } from 'express';\nimport * as fs from 'fs';\nimport { ApiTags, ApiOperation, ApiQuery, ApiResponse } from '@nestjs/swagger';\n\n@ApiTags('Camera')\n@Controller('camera')\nexport class CameraController {\n  constructor(private readonly cameraService: CameraService) {}\n\n  /**\n   * GET /camera/capture\n   * Captures a single image from the Raspberry Pi and returns it.\n   */\n  @Get('capture')\n  @ApiOperation({ summary: 'Capture a single image from Raspberry Pi camera' })\n  @ApiQuery({\n    name: 'filename',\n    required: true,\n    description: 'The filename to assign to the captured image (e.g., photo.jpg)',\n  })\n  @ApiResponse({ status: 200, description: 'Returns the captured image as JPEG' })\n  @ApiResponse({ status: 500, description: 'Failed to capture or send image' })\n  async capture(@Query('filename') filename: string, @Res() res: Response) {\n    const filePath = await this.cameraService.captureImage(filename);\n    const imageStream = fs.createReadStream(filePath);\n    res.setHeader('Content-Type', 'image/jpg');\n    imageStream.pipe(res);\n  }\n\n  /**\n   * POST /camera/start\n   * Starts camera auto-capturing for a given duration (in seconds).\n   */\n  @Post('start')\n  @ApiOperation({ summary: 'Start continuous image capture for N seconds' })\n  @ApiQuery({\n    name: 'duration',\n    required: true,\n    description: 'How many seconds to capture images',\n  })\n  async startCapture(@Query('duration') duration: number) {\n    if (!duration || duration \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CameraController-1.html":{"url":"controllers/CameraController-1.html","title":"controller - CameraController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CameraController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/camera.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                camera\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                startCamera\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        startCamera\n                        \n                    \n                \n            \n            \n                \n                        \n                    startCamera()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('start')@ApiOperation({summary: 'Start camera stream'})@ApiResponse({status: 201, description: 'Camera started and sending frames'})@ApiResponse({status: 500, description: 'Internal server error'})\n                \n            \n\n                    \n                        \n                            Defined in src/services/camera.controller.ts:18\n                        \n                    \n\n\n            \n                \n                        Starts the Python camera script to capture and send frames.\nThis assumes you have a Python script located at scripts/capture_send.py\nthat handles camera input and potentially sends the data elsewhere (e.g., a socket).\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        \nimport { Controller, Post } from '@nestjs/common';\nimport { spawn } from 'child_process';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Camera')\n@Controller('camera')\nexport class CameraController {\n  /**\n   * Starts the Python camera script to capture and send frames.\n   * This assumes you have a Python script located at `scripts/capture_send.py`\n   * that handles camera input and potentially sends the data elsewhere (e.g., a socket).\n   */\n  @Post('start')\n  @ApiOperation({ summary: 'Start camera stream' })\n  @ApiResponse({ status: 201, description: 'Camera started and sending frames' })\n  @ApiResponse({ status: 500, description: 'Internal server error' })\n  async startCamera() {\n    // Spawn a Python process to execute the camera capture script\n    const process = spawn('python', ['scripts/capture_send.py']);\n\n    // Listen to stdout from the Python process\n    process.stdout.on('data', data => {\n      console.log(`stdout: ${data}`);\n    });\n\n    // Listen to stderr for errors from the Python script\n    process.stderr.on('data', data => {\n      console.error(`stderr: ${data}`);\n    });\n\n    // Log when the Python process exits\n    process.on('close', code => {\n      console.log(`Camera process exited with code ${code}`);\n    });\n\n    return { message: 'Camera started and sending frames' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CameraModule.html":{"url":"modules/CameraModule.html","title":"module - CameraModule","body":"\n                   \n\n\n\n\n    Modules\n    CameraModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CameraModule\n\n\n\ncluster_CameraModule_exports\n\n\n\ncluster_CameraModule_providers\n\n\n\n\nCameraService \n\nCameraService \n\n\n\nCameraModule\n\nCameraModule\n\nCameraService  -->\n\nCameraModule->CameraService \n\n\n\n\n\nCameraService\n\nCameraService\n\nCameraModule -->\n\nCameraService->CameraModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/camera/camera.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CameraService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CameraController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CameraService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CameraService } from './camera.service';\nimport { CameraController } from './camera.controller';\n\n@Module({\n  providers: [CameraService],\n  exports:[CameraService],\n  controllers: [CameraController]\n})\nexport class CameraModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CameraService.html":{"url":"injectables/CameraService.html","title":"injectable - CameraService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CameraService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/camera/camera.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                piBaseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                captureImage\n                            \n                            \n                                    Async\n                                startTimedCapture\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        captureImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    captureImage(filename: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/camera/camera.service.ts:16\n                        \n                    \n\n\n            \n                \n                        Capture a single image from the Flask Pi server.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        startTimedCapture\n                        \n                    \n                \n            \n            \n                \n                        \n                    startTimedCapture(duration: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/camera/camera.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Start a video or image capture session for a duration in seconds.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(CameraService.name)\n                    \n                \n                    \n                        \n                                Defined in src/camera/camera.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        piBaseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://192.168.43.75:5000'\n                    \n                \n                    \n                        \n                                Defined in src/camera/camera.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport axios from 'axios';\n\n@Injectable()\nexport class CameraService {\n  private readonly logger = new Logger(CameraService.name);\n\n  // Base URL of your Flask server (no endpoint or query here)\n  private readonly piBaseUrl = 'http://192.168.43.75:5000';\n\n  /**\n   * Capture a single image from the Flask Pi server.\n   */\n  async captureImage(filename: string): Promise {\n    const imageDir = path.join(process.cwd(), 'images');\n    const savePath = path.join(imageDir, filename);\n\n    try {\n      if (!fs.existsSync(imageDir)) {\n        fs.mkdirSync(imageDir, { recursive: true });\n      }\n\n      const captureUrl = `${this.piBaseUrl}/capture`; // Proper URL\n\n      this.logger.log(`Requesting image from: ${captureUrl}`);\n\n      const response = await axios.get(captureUrl, {\n        responseType: 'stream',\n      });\n\n      const writer = fs.createWriteStream(savePath);\n      response.data.pipe(writer);\n\n      await new Promise((resolve, reject) => {\n        writer.on('finish', resolve);\n        writer.on('error', reject);\n      });\n\n      this.logger.log(`Image saved at: ${savePath}`);\n      return savePath;\n    } catch (error) {\n      this.logger.error('Failed to capture image:', error.message);\n      throw new Error('Image capture failed');\n    }\n  }\n\n  /**\n   * Start a video or image capture session for a duration in seconds.\n   */\n  async startTimedCapture(duration: number): Promise {\n    try {\n      const startUrl = `${this.piBaseUrl}/start-capture?duration=${duration}`;\n\n      this.logger.log(`Starting timed capture via: ${startUrl}`);\n\n      await axios.get(startUrl);\n\n      this.logger.log(`Timed capture started successfully`);\n    } catch (error) {\n      this.logger.error('Failed to start timed capture:', error.message);\n      throw new Error('Timed capture failed');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FaceDescriptorData.html":{"url":"interfaces/FaceDescriptorData.html","title":"interface - FaceDescriptorData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FaceDescriptorData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/face-recognition.services.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            descriptor\n                                        \n                                \n                                \n                                        \n                                            registrationNumber\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        descriptor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        descriptor:     Float32Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Float32Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, OnModuleInit, Logger, BadRequestException } from '@nestjs/common';\nimport * as faceapi from 'face-api.js';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as canvas from 'canvas';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { FaceEntity } from 'src/Entities/face.entity';\nimport { AttendanceService } from 'src/attendance/attendance.service';\nimport { FaceGateway } from 'src/FaceGateway/face_gateway';\n\n// Monkey patch face-api.js to work with Node.js using canvas\nfaceapi.env.monkeyPatch({\n  Canvas: canvas.Canvas as any,\n  Image: canvas.Image as any,\n  ImageData: canvas.ImageData as any,\n});\n\n// Interface representing descriptor data to store\nexport interface FaceDescriptorData {\n  descriptor: Float32Array;\n  registrationNumber: string;\n}\n\n// Type for the result of face recognition\nexport type RecognitionResult =\n  | { match: true; registrationNumber: string; distance: number; attendance: any }\n  | { match: true; registrationNumber: string; distance: number; attendanceError: string }\n  | { match: false; registrationNumber: null; distance: number };\n\n@Injectable()\nexport class FaceRecognitionService implements OnModuleInit {\n  private readonly logger = new Logger(FaceRecognitionService.name);\n\n  // In-memory storage of all face descriptors from DB\n  private descriptors: FaceDescriptorData[] = [];\n\n  constructor(\n    @InjectRepository(FaceEntity)\n    private readonly faceRepository: Repository, // Database repository for face data\n    private readonly attendanceService: AttendanceService,   // Attendance marking service\n    private readonly faceGateway: FaceGateway                // WebSocket/event emitter gateway\n  ) {}\n\n  // Runs when the module initializes (loads models and DB descriptors)\n  async onModuleInit(): Promise {\n    await this.loadModels();\n    await this.loadDescriptorsFromDatabase();\n  }\n\n  // Load pre-trained face-api.js models from the filesystem\n  private async loadModels(): Promise {\n    const modelPath = path.resolve(process.cwd(), 'models');\n    await faceapi.nets.tinyFaceDetector.loadFromDisk(modelPath);\n    await faceapi.nets.faceLandmark68Net.loadFromDisk(modelPath);\n    await faceapi.nets.faceRecognitionNet.loadFromDisk(modelPath);\n    this.logger.log(`Face API models loaded from: ${modelPath}`);\n  }\n\n  // Detects faces in an image and returns descriptors\n  async detectFace(imagePath: string): Promise {\n    const img = await canvas.loadImage(imagePath);\n    const detections = await faceapi\n      .detectAllFaces(img as any, new faceapi.TinyFaceDetectorOptions({ inputSize: 416, scoreThreshold: 0.6 }))\n      .withFaceLandmarks()\n      .withFaceDescriptors();\n\n    this.logger.log(`Detected ${detections.length} face(s).`);\n    this.faceGateway.emitEvent('face-detected', {\n      count: detections.length,\n      timestamp: new Date().toISOString(),\n    });\n\n    if (fs.existsSync(imagePath)) fs.unlinkSync(imagePath); // Clean up uploaded image\n    return detections.map((d) => ({ descriptor: d.descriptor }));\n  }\n\n  // Save a new descriptor to the database \n  async saveDescriptor(data: FaceDescriptorData): Promise {\n    const entity = this.faceRepository.create({\n      descriptor: JSON.stringify(Array.from(data.descriptor)),\n      registrationNumber: data.registrationNumber,\n    });\n\n    await this.faceRepository.insert(entity); // Insert to prevent overwriting\n    this.logger.log(`Descriptor saved for registrationNumber: ${data.registrationNumber}`);\n    await this.loadDescriptorsFromDatabase(); // Reload in-memory list\n  }\n\n  // Load all face descriptors from database into memory\n  async loadDescriptorsFromDatabase(): Promise {\n    const all = await this.faceRepository.find();\n    this.descriptors = all.map((entry) => ({\n      descriptor: new Float32Array(JSON.parse(entry.descriptor)),\n      registrationNumber: entry.registrationNumber,\n    }));\n    this.logger.log(`Loaded ${this.descriptors.length} descriptors from DB`);\n  }\n\n  // Recognize user from given face descriptors and mark attendance\n  async recognizeUser(detectedFaces: { descriptor: Float32Array }[]): Promise {\n    const threshold = 0.6;\n    const results: RecognitionResult[] = [];\n    const recognizedUsers = new Set(); // Prevent multiple attendance\n\n    for (const { descriptor } of detectedFaces) {\n      const matches = this.descriptors\n        .map((stored) => ({ stored, distance: faceapi.euclideanDistance(descriptor, stored.descriptor) }))\n        .filter(({ distance }) => distance  a.distance - b.distance); // Closest match first\n\n      if (matches.length > 0) {\n        const { stored, distance } = matches[0];\n        if (!recognizedUsers.has(stored.registrationNumber)) {\n          try {\n            const attendance = await this.attendanceService.markAttendance(stored.registrationNumber);\n            recognizedUsers.add(stored.registrationNumber);\n            results.push({ match: true, registrationNumber: stored.registrationNumber, distance, attendance });\n          } catch (error) {\n            results.push({ match: true, registrationNumber: stored.registrationNumber, distance, attendanceError: error.message });\n          }\n        } else {\n          results.push({ match: true, registrationNumber: stored.registrationNumber, distance, attendanceError: 'Attendance already marked' });\n        }\n      } else {\n        // No match found within threshold\n        this.logger.warn(`Face not recognized. Closest match distance: ${Math.min(...this.descriptors.map(d => faceapi.euclideanDistance(descriptor, d.descriptor))).toFixed(4)}`);\n        results.push({ match: false, registrationNumber: null, distance: Number.MAX_VALUE });\n      }\n    }\n\n    return results;\n  }\n\n  // Fetch all descriptors for a specific user (by registration number)\n  async getDescriptorByRegistrationNumber(registrationNumber: string): Promise {\n    const entries = await this.faceRepository.find({ where: { registrationNumber } });\n    if (!entries.length) return null;\n    return entries.map(entry => ({\n      descriptor: new Float32Array(JSON.parse(entry.descriptor)),\n      registrationNumber: entry.registrationNumber,\n    }));\n  }\n\n  // Fetch all descriptors from DB\n  async getAllDescriptors(): Promise {\n    const all = await this.faceRepository.find();\n    return all.map((face) => ({\n      ...face,\n      descriptor: JSON.parse(face.descriptor),\n    }));\n  }\n\n  // Delete all stored descriptors (DB + in-memory)\n  async deleteAllDescriptors(): Promise {\n    await this.faceRepository.clear();\n    this.descriptors = [];\n    this.logger.log('All descriptors deleted from DB and memory.');\n  }\n\n\nasync deleteDescriptorById(id: string): Promise {\n  const result = await this.faceRepository.delete(id ); // UUID as string\n  return !!result.affected && result.affected > 0;\n}\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/FaceEntity.html":{"url":"entities/FaceEntity.html","title":"entity - FaceEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  FaceEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Entities/face.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                descriptor\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                registrationNumber\n                            \n                            \n                                    \n                                student\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        descriptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/face.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/face.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        registrationNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/face.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Students\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, student => student.faceEntity)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/face.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        // face.entity.ts\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Students } from 'src/attendance/students.entity';\nimport { Entity, PrimaryGeneratedColumn, Column, OneToOne } from 'typeorm';\n\n@Entity('FaceEntity')\nexport class FaceEntity {\n   @ApiProperty()\n  @PrimaryGeneratedColumn('uuid')\n  id: number;\n\n @Column({ type: 'text' }) // Store descriptor as JSON string\n  descriptor: string;\n@ApiProperty()\n @Column({ unique: true })\n   registrationNumber: string;\n\n  @OneToOne(() => Students, student => student.faceEntity)\n  student: Students;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FaceGateway.html":{"url":"classes/FaceGateway.html","title":"class - FaceGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FaceGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/FaceGateway/face_gateway.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnGatewayConnection\n                        OnGatewayDisconnect\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitEvent\n                            \n                            \n                                handleConnection\n                            \n                            \n                                handleDisconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(FaceGateway.name)\n                    \n                \n                    \n                        \n                                Defined in src/FaceGateway/face_gateway.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/FaceGateway/face_gateway.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        emitEvent\n                        \n                    \n                \n            \n            \n                \nemitEvent(event: string, payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/FaceGateway/face_gateway.ts:45\n                        \n                    \n\n\n            \n                \n                        Emit a custom event to all connected WebSocket clients.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the event to emit\n\n\n                                            \n                                        \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to send with the event\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleConnection\n                        \n                    \n                \n            \n            \n                \nhandleConnection(client: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/FaceGateway/face_gateway.ts:28\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook triggered when a client connects to the WebSocket server.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                client\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe connected socket client\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDisconnect\n                        \n                    \n                \n            \n            \n                \nhandleDisconnect(client: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/FaceGateway/face_gateway.ts:36\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook triggered when a client disconnects from the WebSocket server.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                client\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe disconnected socket client\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  WebSocketGateway,\n  WebSocketServer,\n  OnGatewayConnection,\n  OnGatewayDisconnect,\n} from '@nestjs/websockets';\nimport { Server } from 'socket.io';\nimport { Logger } from '@nestjs/common';\n\n@WebSocketGateway({\n  // Enable Cross-Origin Resource Sharing to allow any origin\n  cors: {\n    origin: '*',\n  },\n})\nexport class FaceGateway implements OnGatewayConnection, OnGatewayDisconnect {\n  // Access the underlying WebSocket server instance (socket.io)\n  @WebSocketServer()\n  server: Server;\n\n  // Logger for monitoring gateway activity\n  private readonly logger = new Logger(FaceGateway.name);\n\n  /**\n   * Lifecycle hook triggered when a client connects to the WebSocket server.\n   * @param client - The connected socket client\n   */\n  handleConnection(client: any) {\n    this.logger.log(`Client connected: ${client.id}`);\n  }\n\n  /**\n   * Lifecycle hook triggered when a client disconnects from the WebSocket server.\n   * @param client - The disconnected socket client\n   */\n  handleDisconnect(client: any) {\n    this.logger.log(`Client disconnected: ${client.id}`);\n  }\n\n  /**\n   * Emit a custom event to all connected WebSocket clients.\n   * @param event - The name of the event to emit\n   * @param payload - The data to send with the event\n   */\n  emitEvent(event: string, payload: any) {\n    this.server.emit(event, payload);\n    this.logger.log(`Event emitted: ${event}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FaceRecognitionController.html":{"url":"controllers/FaceRecognitionController.html","title":"controller - FaceRecognitionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FaceRecognitionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/face-recognition.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                face\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteAllDescriptors\n                            \n                            \n                                    \n                                    Async\n                                deleteById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                detectAndRegister\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getAllDescriptors\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                recognizeFace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        deleteAllDescriptors\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAllDescriptors()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('all')@ApiOperation({summary: 'Delete all face descriptors'})@ApiResponse({status: 200, description: 'All descriptors deleted successfully.'})@ApiResponse({status: 500, description: 'Failed to delete descriptors.'})\n                \n            \n\n                    \n                        \n                            Defined in src/services/face-recognition.controller.ts:152\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/services/face-recognition.controller.ts:180\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        detectAndRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    detectAndRegister(file: Express.Multer.File, registrationNumber: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('detect')@ApiOperation({summary: 'Detect and register face (saves descriptor)'})@ApiConsumes('multipart/form-data')@ApiBody({schema: undefined})@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/services/face-recognition.controller.ts:56\n                        \n                    \n\n\n            \n                \n                        Detects and recognizes a face using uploaded image or live camera feed.\nSaves a new descriptor if the face is not yet registered.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                registrationNumber\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        getAllDescriptors\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllDescriptors()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('all')@ApiOperation({summary: 'Get all face descriptors'})@ApiResponse({status: 200, description: 'List of all descriptors.'})@ApiResponse({status: 500, description: 'Failed to fetch descriptors.'})\n                \n            \n\n                    \n                        \n                            Defined in src/services/face-recognition.controller.ts:168\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        recognizeFace\n                        \n                    \n                \n            \n            \n                \n                        \n                    recognizeFace(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('recognize')@ApiOperation({summary: 'Recognize face and mark attendance'})@ApiConsumes('multipart/form-data')@ApiBody({schema: undefined})@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/services/face-recognition.controller.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  UploadedFile,\n  UseInterceptors,\n  Body,\n  InternalServerErrorException,\n  Logger,\n  Get,\n  Delete,\n  Param,\n  NotFoundException,\n  BadRequestException,\n  \n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { CameraService } from '../camera/camera.service';\nimport { FaceRecognitionService, RecognitionResult } from './face-recognition.services';\nimport { ApiTags, ApiOperation, ApiConsumes, ApiBody, ApiResponse } from '@nestjs/swagger';\nimport { validate as isUUID } from 'uuid';\n\n\n@ApiTags('Face Recognition') // Groups routes under \"Face Recognition\" in Swagger UI\n@Controller('face')\nexport class FaceRecognitionController {\n  private readonly logger = new Logger(FaceRecognitionController.name);\n\n  constructor(\n    private readonly faceService: FaceRecognitionService,\n    private readonly cameraService: CameraService,\n  ) {}\n\n\n  \n  /**\n   * Detects and recognizes a face using uploaded image or live camera feed.\n   * Saves a new descriptor if the face is not yet registered.\n   */\n // \n@Post('detect')\n@ApiOperation({ summary: 'Detect and register face (saves descriptor)' })\n@ApiConsumes('multipart/form-data')\n@ApiBody({\n  schema: {\n    type: 'object',\n    properties: {\n      file: { type: 'string', format: 'binary', description: 'Image file' },\n      registrationNumber: { type: 'string', description: 'User registration number' },\n    },\n    required: ['registrationNumber'], // file is optional now\n  },\n})\n@UseInterceptors(FileInterceptor('file'))\nasync detectAndRegister(\n  @UploadedFile() file: Express.Multer.File,\n  @Body('registrationNumber') registrationNumber: string,\n) {\n  if (!registrationNumber) throw new BadRequestException('Registration number is required.');\n\n  const uploadDir = path.join(__dirname, '..', '..', 'uploads');\n  fs.mkdirSync(uploadDir, { recursive: true });\n\n  let tempPath: string | undefined = undefined;  // Initialize as undefined\n\n  try {\n    if (!file) {\n      // Capture image from camera service if file is missing\n      const filename = `${Date.now()}.jpg`;\n      tempPath = await this.cameraService.captureImage(filename);\n    } else {\n      tempPath = path.join(uploadDir, `${Date.now()}-${file.originalname}`);\n      fs.writeFileSync(tempPath, file.buffer);\n    }\n\n    const detections = await this.faceService.detectFace(tempPath);\n    if (detections.length === 0) {\n      throw new BadRequestException('No faces detected in the image.');\n    }\n\n    for (const { descriptor } of detections) {\n      await this.faceService.saveDescriptor({ descriptor, registrationNumber });\n    }\n\n    return {\n      message: `${detections.length} face(s) detected and descriptor(s) saved`,\n      registrationNumber,\n    };\n  } catch (err) {\n    this.logger.error('Detection failed', err.stack || err.message);\n    throw new InternalServerErrorException('Face detection failed.');\n  } finally {\n    if (tempPath && fs.existsSync(tempPath)) {\n      fs.unlinkSync(tempPath);\n    }\n  }\n}\n\n\n@Post('recognize')\n@ApiOperation({ summary: 'Recognize face and mark attendance' })\n@ApiConsumes('multipart/form-data')\n@ApiBody({\n  schema: {\n    type: 'object',\n    properties: {\n      file: { type: 'string', format: 'binary', description: 'Optional image file' },\n    },\n  },\n})\n@UseInterceptors(FileInterceptor('file'))\nasync recognizeFace(@UploadedFile() file: Express.Multer.File) {\n  const uploadDir = path.join(__dirname, '..', '..', 'uploads');\n  fs.mkdirSync(uploadDir, { recursive: true });\n\n  let tempPath: string | undefined = undefined; // Initialize as undefined\n\n  try {\n    if (!file) {\n      // Capture image from camera service\n      const filename = `${Date.now()}.jpg`;\n      tempPath = await this.cameraService.captureImage(filename);\n    } else {\n      // Use uploaded image\n      tempPath = path.join(uploadDir, `${Date.now()}-${file.originalname}`);\n      fs.writeFileSync(tempPath, file.buffer);\n    }\n\n    const detections = await this.faceService.detectFace(tempPath);\n    const recognitionResults = await this.faceService.recognizeUser(detections);\n    return recognitionResults;\n  } catch (err) {\n    this.logger.error('Recognition failed', err.stack || err.message);\n    throw new InternalServerErrorException('Face recognition failed.');\n  } finally {\n    if (tempPath && fs.existsSync(tempPath)) {\n      fs.unlinkSync(tempPath);\n    }\n  }\n}\n\n\n\n  \n   // Deletes all stored face descriptors.\n   \n  @Delete('all')\n  @ApiOperation({ summary: 'Delete all face descriptors' })\n  @ApiResponse({ status: 200, description: 'All descriptors deleted successfully.' })\n  @ApiResponse({ status: 500, description: 'Failed to delete descriptors.' })\n  async deleteAllDescriptors() {\n    try {\n      await this.faceService.deleteAllDescriptors();\n      return { message: 'All descriptors deleted successfully' };\n    } catch (err) {\n      throw new InternalServerErrorException('Failed to delete all descriptors');\n    }\n  }\n\n  \n   //Retrieves all stored face descriptors from the database.\n   \n  @Get('all')\n  @ApiOperation({ summary: 'Get all face descriptors' })\n  @ApiResponse({ status: 200, description: 'List of all descriptors.' })\n  @ApiResponse({ status: 500, description: 'Failed to fetch descriptors.' })\n  async getAllDescriptors() {\n    try {\n      return await this.faceService.getAllDescriptors();\n    } catch (error) {\n      this.logger.error('Failed to fetch descriptors', error.stack || error.message);\n      throw new InternalServerErrorException('Failed to fetch data.');\n    }\n  }\n\n\n\n@Delete(':id')\nasync deleteById(@Param('id') id: string) {\n  if (!isUUID(id)) {\n    throw new BadRequestException('Invalid UUID format');\n  }\n\n  const deleted = await this.faceService.deleteDescriptorById(id);\n\n  if (!deleted) {\n    throw new NotFoundException('Descriptor not found');\n  }\n\n  return { message: 'Descriptor deleted successfully' };\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FaceRecognitionModule.html":{"url":"modules/FaceRecognitionModule.html","title":"module - FaceRecognitionModule","body":"\n                   \n\n\n\n\n    Modules\n    FaceRecognitionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FaceRecognitionModule\n\n\n\ncluster_FaceRecognitionModule_providers\n\n\n\ncluster_FaceRecognitionModule_imports\n\n\n\n\nAttendanceModule\n\nAttendanceModule\n\n\n\nFaceRecognitionModule\n\nFaceRecognitionModule\n\nFaceRecognitionModule -->\n\nAttendanceModule->FaceRecognitionModule\n\n\n\n\n\nCameraModule\n\nCameraModule\n\nFaceRecognitionModule -->\n\nCameraModule->FaceRecognitionModule\n\n\n\n\n\nGatewayModule\n\nGatewayModule\n\nFaceRecognitionModule -->\n\nGatewayModule->FaceRecognitionModule\n\n\n\n\n\nFaceRecognitionService\n\nFaceRecognitionService\n\nFaceRecognitionModule -->\n\nFaceRecognitionService->FaceRecognitionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/services/face-recognition.model.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FaceRecognitionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FaceRecognitionController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AttendanceModule\n                        \n                        \n                            CameraModule\n                        \n                        \n                            GatewayModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FaceRecognitionService } from '../services/face-recognition.services';\nimport { FaceRecognitionController } from './face-recognition.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { FaceEntity } from 'src/Entities/face.entity';\nimport { AttendanceModule } from 'src/attendance/attendance.module';\nimport { CameraModule } from 'src/camera/camera.module';\nimport { GatewayModule } from 'src/face-gateway/face-gateway.module';\n\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([FaceEntity]),\n    AttendanceModule,\n     CameraModule,\n    GatewayModule\n  ],\n\n  providers: [FaceRecognitionService],\n  controllers: [FaceRecognitionController],\n})\nexport class FaceRecognitionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FaceRecognitionService.html":{"url":"injectables/FaceRecognitionService.html","title":"injectable - FaceRecognitionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FaceRecognitionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/face-recognition.services.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                descriptors\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteAllDescriptors\n                            \n                            \n                                    Async\n                                deleteDescriptorById\n                            \n                            \n                                    Async\n                                detectFace\n                            \n                            \n                                    Async\n                                getAllDescriptors\n                            \n                            \n                                    Async\n                                getDescriptorByRegistrationNumber\n                            \n                            \n                                    Async\n                                loadDescriptorsFromDatabase\n                            \n                            \n                                    Private\n                                    Async\n                                loadModels\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                recognizeUser\n                            \n                            \n                                    Async\n                                saveDescriptor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(faceRepository: Repository, attendanceService: AttendanceService, faceGateway: FaceGateway)\n                    \n                \n                        \n                            \n                                Defined in src/services/face-recognition.services.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        faceRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        attendanceService\n                                                  \n                                                        \n                                                                        AttendanceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        faceGateway\n                                                  \n                                                        \n                                                                        FaceGateway\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteAllDescriptors\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAllDescriptors()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/face-recognition.services.ts:155\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteDescriptorById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDescriptorById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/face-recognition.services.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        detectFace\n                        \n                    \n                \n            \n            \n                \n                        \n                    detectFace(imagePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/face-recognition.services.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                imagePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllDescriptors\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllDescriptors()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/face-recognition.services.ts:146\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDescriptorByRegistrationNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDescriptorByRegistrationNumber(registrationNumber: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/face-recognition.services.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registrationNumber\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadDescriptorsFromDatabase\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadDescriptorsFromDatabase()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/face-recognition.services.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        loadModels\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadModels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/face-recognition.services.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/face-recognition.services.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        recognizeUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    recognizeUser(detectedFaces: literal type[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/face-recognition.services.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                detectedFaces\n                                            \n                                                        literal type[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        saveDescriptor\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveDescriptor(data: FaceDescriptorData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/face-recognition.services.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            FaceDescriptorData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        descriptors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FaceDescriptorData[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/services/face-recognition.services.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(FaceRecognitionService.name)\n                    \n                \n                    \n                        \n                                Defined in src/services/face-recognition.services.ts:33\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit, Logger, BadRequestException } from '@nestjs/common';\nimport * as faceapi from 'face-api.js';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as canvas from 'canvas';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { FaceEntity } from 'src/Entities/face.entity';\nimport { AttendanceService } from 'src/attendance/attendance.service';\nimport { FaceGateway } from 'src/FaceGateway/face_gateway';\n\n// Monkey patch face-api.js to work with Node.js using canvas\nfaceapi.env.monkeyPatch({\n  Canvas: canvas.Canvas as any,\n  Image: canvas.Image as any,\n  ImageData: canvas.ImageData as any,\n});\n\n// Interface representing descriptor data to store\nexport interface FaceDescriptorData {\n  descriptor: Float32Array;\n  registrationNumber: string;\n}\n\n// Type for the result of face recognition\nexport type RecognitionResult =\n  | { match: true; registrationNumber: string; distance: number; attendance: any }\n  | { match: true; registrationNumber: string; distance: number; attendanceError: string }\n  | { match: false; registrationNumber: null; distance: number };\n\n@Injectable()\nexport class FaceRecognitionService implements OnModuleInit {\n  private readonly logger = new Logger(FaceRecognitionService.name);\n\n  // In-memory storage of all face descriptors from DB\n  private descriptors: FaceDescriptorData[] = [];\n\n  constructor(\n    @InjectRepository(FaceEntity)\n    private readonly faceRepository: Repository, // Database repository for face data\n    private readonly attendanceService: AttendanceService,   // Attendance marking service\n    private readonly faceGateway: FaceGateway                // WebSocket/event emitter gateway\n  ) {}\n\n  // Runs when the module initializes (loads models and DB descriptors)\n  async onModuleInit(): Promise {\n    await this.loadModels();\n    await this.loadDescriptorsFromDatabase();\n  }\n\n  // Load pre-trained face-api.js models from the filesystem\n  private async loadModels(): Promise {\n    const modelPath = path.resolve(process.cwd(), 'models');\n    await faceapi.nets.tinyFaceDetector.loadFromDisk(modelPath);\n    await faceapi.nets.faceLandmark68Net.loadFromDisk(modelPath);\n    await faceapi.nets.faceRecognitionNet.loadFromDisk(modelPath);\n    this.logger.log(`Face API models loaded from: ${modelPath}`);\n  }\n\n  // Detects faces in an image and returns descriptors\n  async detectFace(imagePath: string): Promise {\n    const img = await canvas.loadImage(imagePath);\n    const detections = await faceapi\n      .detectAllFaces(img as any, new faceapi.TinyFaceDetectorOptions({ inputSize: 416, scoreThreshold: 0.6 }))\n      .withFaceLandmarks()\n      .withFaceDescriptors();\n\n    this.logger.log(`Detected ${detections.length} face(s).`);\n    this.faceGateway.emitEvent('face-detected', {\n      count: detections.length,\n      timestamp: new Date().toISOString(),\n    });\n\n    if (fs.existsSync(imagePath)) fs.unlinkSync(imagePath); // Clean up uploaded image\n    return detections.map((d) => ({ descriptor: d.descriptor }));\n  }\n\n  // Save a new descriptor to the database \n  async saveDescriptor(data: FaceDescriptorData): Promise {\n    const entity = this.faceRepository.create({\n      descriptor: JSON.stringify(Array.from(data.descriptor)),\n      registrationNumber: data.registrationNumber,\n    });\n\n    await this.faceRepository.insert(entity); // Insert to prevent overwriting\n    this.logger.log(`Descriptor saved for registrationNumber: ${data.registrationNumber}`);\n    await this.loadDescriptorsFromDatabase(); // Reload in-memory list\n  }\n\n  // Load all face descriptors from database into memory\n  async loadDescriptorsFromDatabase(): Promise {\n    const all = await this.faceRepository.find();\n    this.descriptors = all.map((entry) => ({\n      descriptor: new Float32Array(JSON.parse(entry.descriptor)),\n      registrationNumber: entry.registrationNumber,\n    }));\n    this.logger.log(`Loaded ${this.descriptors.length} descriptors from DB`);\n  }\n\n  // Recognize user from given face descriptors and mark attendance\n  async recognizeUser(detectedFaces: { descriptor: Float32Array }[]): Promise {\n    const threshold = 0.6;\n    const results: RecognitionResult[] = [];\n    const recognizedUsers = new Set(); // Prevent multiple attendance\n\n    for (const { descriptor } of detectedFaces) {\n      const matches = this.descriptors\n        .map((stored) => ({ stored, distance: faceapi.euclideanDistance(descriptor, stored.descriptor) }))\n        .filter(({ distance }) => distance  a.distance - b.distance); // Closest match first\n\n      if (matches.length > 0) {\n        const { stored, distance } = matches[0];\n        if (!recognizedUsers.has(stored.registrationNumber)) {\n          try {\n            const attendance = await this.attendanceService.markAttendance(stored.registrationNumber);\n            recognizedUsers.add(stored.registrationNumber);\n            results.push({ match: true, registrationNumber: stored.registrationNumber, distance, attendance });\n          } catch (error) {\n            results.push({ match: true, registrationNumber: stored.registrationNumber, distance, attendanceError: error.message });\n          }\n        } else {\n          results.push({ match: true, registrationNumber: stored.registrationNumber, distance, attendanceError: 'Attendance already marked' });\n        }\n      } else {\n        // No match found within threshold\n        this.logger.warn(`Face not recognized. Closest match distance: ${Math.min(...this.descriptors.map(d => faceapi.euclideanDistance(descriptor, d.descriptor))).toFixed(4)}`);\n        results.push({ match: false, registrationNumber: null, distance: Number.MAX_VALUE });\n      }\n    }\n\n    return results;\n  }\n\n  // Fetch all descriptors for a specific user (by registration number)\n  async getDescriptorByRegistrationNumber(registrationNumber: string): Promise {\n    const entries = await this.faceRepository.find({ where: { registrationNumber } });\n    if (!entries.length) return null;\n    return entries.map(entry => ({\n      descriptor: new Float32Array(JSON.parse(entry.descriptor)),\n      registrationNumber: entry.registrationNumber,\n    }));\n  }\n\n  // Fetch all descriptors from DB\n  async getAllDescriptors(): Promise {\n    const all = await this.faceRepository.find();\n    return all.map((face) => ({\n      ...face,\n      descriptor: JSON.parse(face.descriptor),\n    }));\n  }\n\n  // Delete all stored descriptors (DB + in-memory)\n  async deleteAllDescriptors(): Promise {\n    await this.faceRepository.clear();\n    this.descriptors = [];\n    this.logger.log('All descriptors deleted from DB and memory.');\n  }\n\n\nasync deleteDescriptorById(id: string): Promise {\n  const result = await this.faceRepository.delete(id ); // UUID as string\n  return !!result.affected && result.affected > 0;\n}\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GatewayModule.html":{"url":"modules/GatewayModule.html","title":"module - GatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    GatewayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_exports\n\n\n\n\nFaceGateway \n\nFaceGateway \n\n\n\nGatewayModule\n\nGatewayModule\n\nFaceGateway  -->\n\nGatewayModule->FaceGateway \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/face-gateway/face-gateway.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            FaceGateway\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // src/gateway/gateway.module.ts\nimport { Module } from '@nestjs/common';\nimport { FaceGateway } from 'src/FaceGateway/face_gateway';\n\n\n@Module({\n  providers: [FaceGateway],\n  exports: [FaceGateway],\n})\nexport class GatewayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MarkAttendanceDto.html":{"url":"classes/MarkAttendanceDto.html","title":"class - MarkAttendanceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MarkAttendanceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/attendance/dto/markattendance_dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                registrationNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        registrationNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attendance/dto/markattendance_dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class MarkAttendanceDto {\n  @ApiProperty()\n  registrationNumber: string;\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockEnrollDto.html":{"url":"classes/MockEnrollDto.html","title":"class - MockEnrollDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockEnrollDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/attendance/dto/mockenroll_dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                registrationNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attendance/dto/mockenroll_dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        registrationNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attendance/dto/mockenroll_dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\n// dto/mock-enroll.dto.ts\nexport class MockEnrollDto {\n    @ApiProperty()\n    name: string;\n    @ApiProperty()\n    registrationNumber: string;\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Students.html":{"url":"entities/Students.html","title":"entity - Students","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Students\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/attendance/students.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                faceEntity\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                lastMarkedAt\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                registrationNumber\n                            \n                            \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        faceEntity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FaceEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, faceEntity => faceEntity.student, {nullable: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attendance/students.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attendance/students.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastMarkedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attendance/students.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attendance/students.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        registrationNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attendance/students.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attendance/students.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        // students.entity.ts\nimport { FaceEntity } from 'src/Entities/face.entity';\nimport { Entity, PrimaryGeneratedColumn, Column, OneToOne, JoinColumn } from 'typeorm';\n\n@Entity('students')\nexport class Students {\n  @Column()\n  @PrimaryGeneratedColumn()\n  id:number\n  \n  @Column()\n  name: string;\n\n  @Column({ unique: true })\n   registrationNumber: string;\n\n  @Column()\n  status: string;\n\n  @Column({ type: 'timestamp', nullable: true })\n  lastMarkedAt: Date;\n\n  @OneToOne(() => FaceEntity, faceEntity => faceEntity.student, { nullable: true })\n  @JoinColumn()\n  faceEntity: FaceEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/Entities/face.entity.ts\n            \n            entity\n            FaceEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/FaceGateway/face_gateway.ts\n            \n            class\n            FaceGateway\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/attendance/attendance.controller.ts\n            \n            controller\n            AttendanceController\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/attendance/attendance.service.ts\n            \n            injectable\n            AttendanceService\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/attendance/dto/markattendance_dto.ts\n            \n            class\n            MarkAttendanceDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/attendance/dto/mockenroll_dto.ts\n            \n            class\n            MockEnrollDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/attendance/students.entity.ts\n            \n            entity\n            Students\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/camera/camera.controller.ts\n            \n            controller\n            CameraController\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/camera/camera.service.ts\n            \n            injectable\n            CameraService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/camera.controller.ts\n            \n            controller\n            CameraController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/services/face-recognition.controller.ts\n            \n            controller\n            FaceRecognitionController\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/services/face-recognition.services.ts\n            \n            injectable\n            FaceRecognitionService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/services/face-recognition.services.ts\n            \n            interface\n            FaceDescriptorData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/services/face-recognition.services.ts\n            \n            type alias\n            RecognitionResult\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/platform-socket.io : ^11.1.1\n        \n            @nestjs/swagger : ^11.2.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            @nestjs/websockets : ^11.1.1\n        \n            @tensorflow/tfjs : ^4.22.0\n        \n            axios : ^1.9.0\n        \n            canvas : ^3.1.0\n        \n            dotenv : ^16.4.7\n        \n            face-api.js : ^0.22.2\n        \n            multer : ^1.4.5-lts.2\n        \n            mysql2 : ^3.14.0\n        \n            pg : ^8.14.1\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            socket.io : ^4.8.1\n        \n            swagger-ui-express : ^5.0.1\n        \n            typeorm : ^0.3.21\n        \n            unzipper : ^0.12.3\n        \n            uuid : ^11.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AttendanceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CameraModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FaceRecognitionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GatewayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AttendanceModule\n\n\n\ncluster_AttendanceModule_exports\n\n\n\ncluster_AttendanceModule_providers\n\n\n\ncluster_CameraModule\n\n\n\ncluster_CameraModule_exports\n\n\n\ncluster_CameraModule_providers\n\n\n\ncluster_FaceRecognitionModule\n\n\n\ncluster_FaceRecognitionModule_providers\n\n\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_exports\n\n\n\n\nAttendanceModule\n\nAttendanceModule\n\n\n\nFaceRecognitionModule\n\nFaceRecognitionModule\n\nFaceRecognitionModule -->\n\nAttendanceModule->FaceRecognitionModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAttendanceModule->AppModule\n\n\n\n\n\nAttendanceService \n\nAttendanceService \n\nAttendanceService  -->\n\nAttendanceModule->AttendanceService \n\n\n\n\n\nCameraModule\n\nCameraModule\n\nFaceRecognitionModule -->\n\nCameraModule->FaceRecognitionModule\n\n\n\nAppModule -->\n\nCameraModule->AppModule\n\n\n\n\n\nCameraService \n\nCameraService \n\nCameraService  -->\n\nCameraModule->CameraService \n\n\n\nAppModule -->\n\nFaceRecognitionModule->AppModule\n\n\n\n\n\nGatewayModule\n\nGatewayModule\n\nFaceRecognitionModule -->\n\nGatewayModule->FaceRecognitionModule\n\n\n\nAppModule -->\n\nGatewayModule->AppModule\n\n\n\n\n\nFaceGateway \n\nFaceGateway \n\nFaceGateway  -->\n\nGatewayModule->FaceGateway \n\n\n\n\n\nAttendanceService\n\nAttendanceService\n\nAttendanceModule -->\n\nAttendanceService->AttendanceModule\n\n\n\n\n\nCameraService\n\nCameraService\n\nCameraModule -->\n\nCameraService->CameraModule\n\n\n\n\n\nFaceRecognitionService\n\nFaceRecognitionService\n\nFaceRecognitionModule -->\n\nFaceRecognitionService->FaceRecognitionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RecognitionResult   (src/.../face-recognition.services.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/services/face-recognition.services.ts\n    \n    \n        \n            \n                \n                    \n                    RecognitionResult\n                \n            \n            \n                \n                        literal type | literal type | literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                               (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : canvas\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
